TimeQuest Timing Analyzer report for HDB3
Thu Sep 30 11:45:33 2021
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Setup: 'even256_div:div256|clk_out'
 13. Slow Model Setup: 'recover:u8|clk_out'
 14. Slow Model Setup: 'even16_div:div16|clk_out'
 15. Slow Model Hold: 'even256_div:div256|clk_out'
 16. Slow Model Hold: 'clk'
 17. Slow Model Hold: 'even16_div:div16|clk_out'
 18. Slow Model Hold: 'recover:u8|clk_out'
 19. Slow Model Minimum Pulse Width: 'clk'
 20. Slow Model Minimum Pulse Width: 'even16_div:div16|clk_out'
 21. Slow Model Minimum Pulse Width: 'even256_div:div256|clk_out'
 22. Slow Model Minimum Pulse Width: 'recover:u8|clk_out'
 23. Setup Times
 24. Hold Times
 25. Clock to Output Times
 26. Minimum Clock to Output Times
 27. Propagation Delay
 28. Minimum Propagation Delay
 29. Fast Model Setup Summary
 30. Fast Model Hold Summary
 31. Fast Model Recovery Summary
 32. Fast Model Removal Summary
 33. Fast Model Minimum Pulse Width Summary
 34. Fast Model Setup: 'clk'
 35. Fast Model Setup: 'recover:u8|clk_out'
 36. Fast Model Setup: 'even256_div:div256|clk_out'
 37. Fast Model Setup: 'even16_div:div16|clk_out'
 38. Fast Model Hold: 'clk'
 39. Fast Model Hold: 'even256_div:div256|clk_out'
 40. Fast Model Hold: 'even16_div:div16|clk_out'
 41. Fast Model Hold: 'recover:u8|clk_out'
 42. Fast Model Minimum Pulse Width: 'clk'
 43. Fast Model Minimum Pulse Width: 'even16_div:div16|clk_out'
 44. Fast Model Minimum Pulse Width: 'even256_div:div256|clk_out'
 45. Fast Model Minimum Pulse Width: 'recover:u8|clk_out'
 46. Setup Times
 47. Hold Times
 48. Clock to Output Times
 49. Minimum Clock to Output Times
 50. Propagation Delay
 51. Minimum Propagation Delay
 52. Multicorner Timing Analysis Summary
 53. Setup Times
 54. Hold Times
 55. Clock to Output Times
 56. Minimum Clock to Output Times
 57. Progagation Delay
 58. Minimum Progagation Delay
 59. Setup Transfers
 60. Hold Transfers
 61. Report TCCS
 62. Report RSKM
 63. Unconstrained Paths
 64. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                        ;
+--------------------+-----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Full Version ;
; Revision Name      ; HDB3                                                ;
; Device Family      ; Cyclone II                                          ;
; Device Name        ; EP2C8T144C8                                         ;
; Timing Models      ; Final                                               ;
; Delay Model        ; Combined                                            ;
; Rise/Fall Delays   ; Unavailable                                         ;
+--------------------+-----------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 4           ;
; Maximum allowed            ; 4           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ; < 0.1%      ;
;     Processors 3-4         ;   0.0%      ;
+----------------------------+-------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                 ;
+----------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------------------------+
; Clock Name                 ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                        ;
+----------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------------------------+
; clk                        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                        ;
; even16_div:div16|clk_out   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { even16_div:div16|clk_out }   ;
; even256_div:div256|clk_out ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { even256_div:div256|clk_out } ;
; recover:u8|clk_out         ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { recover:u8|clk_out }         ;
+----------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------------------------+


+------------------------------------------------------------------+
; Slow Model Fmax Summary                                          ;
+------------+-----------------+----------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name                 ; Note ;
+------------+-----------------+----------------------------+------+
; 317.66 MHz ; 317.66 MHz      ; clk                        ;      ;
; 378.5 MHz  ; 378.5 MHz       ; even256_div:div256|clk_out ;      ;
; 386.4 MHz  ; 386.4 MHz       ; recover:u8|clk_out         ;      ;
; 398.57 MHz ; 398.57 MHz      ; even16_div:div16|clk_out   ;      ;
+------------+-----------------+----------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-----------------------------------------------------+
; Slow Model Setup Summary                            ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; clk                        ; -2.148 ; -19.036       ;
; even256_div:div256|clk_out ; -1.642 ; -6.565        ;
; recover:u8|clk_out         ; -1.588 ; -9.670        ;
; even16_div:div16|clk_out   ; -1.509 ; -9.497        ;
+----------------------------+--------+---------------+


+-----------------------------------------------------+
; Slow Model Hold Summary                             ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; even256_div:div256|clk_out ; -2.972 ; -5.944        ;
; clk                        ; -2.617 ; -2.617        ;
; even16_div:div16|clk_out   ; 0.499  ; 0.000         ;
; recover:u8|clk_out         ; 0.499  ; 0.000         ;
+----------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+-----------------------------------------------------+
; Slow Model Minimum Pulse Width Summary              ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; clk                        ; -1.941 ; -15.297       ;
; even16_div:div16|clk_out   ; -0.742 ; -41.552       ;
; even256_div:div256|clk_out ; -0.742 ; -22.260       ;
; recover:u8|clk_out         ; -0.742 ; -19.292       ;
+----------------------------+--------+---------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                                ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock               ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.148 ; even256_div:div256|count[1] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.188      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -2.087 ; even256_div:div256|count[0] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.127      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.962 ; even256_div:div256|count[4] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 3.002      ;
; -1.852 ; even256_div:div256|count[4] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.892      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.836 ; even256_div:div256|count[2] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.876      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.681 ; even256_div:div256|count[5] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.721      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.670 ; even256_div:div256|count[3] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.710      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.651 ; even256_div:div256|count[6] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.691      ;
; -1.571 ; even256_div:div256|count[5] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.611      ;
; -1.541 ; even256_div:div256|count[6] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.581      ;
; -1.378 ; even256_div:div256|count[1] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.418      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.330 ; even256_div:div256|count[7] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.370      ;
; -1.317 ; even256_div:div256|count[0] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.357      ;
; -1.066 ; even256_div:div256|count[2] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 2.106      ;
; -0.900 ; even256_div:div256|count[3] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.940      ;
; -0.449 ; even256_div:div256|count[7] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.489      ;
; 2.851  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; 0.500        ; 2.812      ; 0.805      ;
; 3.351  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; 1.000        ; 2.812      ; 0.805      ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'even256_div:div256|clk_out'                                                                                                                    ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                   ; Launch Clock               ; Latch Clock                ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; -1.642 ; recover:u8|buffer[6]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 2.682      ;
; -1.606 ; recover:u8|buffer[5]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 2.646      ;
; -1.527 ; recover:u8|buffer[4]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 2.567      ;
; -1.034 ; recover:u8|counter[0]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 2.074      ;
; -1.008 ; recover:u8|buffer[7]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 2.048      ;
; -0.915 ; recover:u8|buffer[3]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.955      ;
; -0.903 ; recover:u8|counter[1]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.943      ;
; -0.848 ; recover:u8|flag           ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.888      ;
; -0.848 ; recover:u8|flag           ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.888      ;
; -0.774 ; recover:u8|flag           ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.814      ;
; -0.771 ; recover:u8|counter[2]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.811      ;
; -0.713 ; recover:u8|flag           ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.753      ;
; -0.698 ; even16_div:div16|count[0] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.738      ;
; -0.588 ; recover:u8|counter[3]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.628      ;
; -0.506 ; recover:u8|counter[0]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.546      ;
; -0.506 ; recover:u8|counter[0]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.546      ;
; -0.500 ; recover:u8|counter[0]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.540      ;
; -0.454 ; even16_div:div16|count[0] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.494      ;
; -0.452 ; recover:u8|counter[1]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.492      ;
; -0.447 ; recover:u8|counter[2]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.487      ;
; -0.442 ; even16_div:div16|count[2] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.482      ;
; -0.351 ; recover:u8|flag           ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.391      ;
; -0.350 ; recover:u8|flag           ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.390      ;
; -0.310 ; recover:u8|counter[1]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.350      ;
; -0.029 ; even16_div:div16|count[0] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.069      ;
; -0.016 ; even16_div:div16|count[1] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.056      ;
; -0.016 ; even16_div:div16|count[1] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 1.056      ;
; 0.235  ; even16_div:div16|count[0] ; even16_div:div16|count[0] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; recover:u8|counter[0]     ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; recover:u8|counter[1]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; recover:u8|counter[2]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; recover:u8|counter[3]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; even16_div:div16|count[2] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; even16_div:div16|count[1] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 3.206  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 0.500        ; 3.167      ; 0.805      ;
; 3.206  ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; 0.500        ; 3.167      ; 0.805      ;
; 3.706  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 1.000        ; 3.167      ; 0.805      ;
; 3.706  ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; 1.000        ; 3.167      ; 0.805      ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'recover:u8|clk_out'                                                                                                   ;
+--------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; Slack  ; From Node              ; To Node             ; Launch Clock       ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; -1.588 ; trans8to1:u5|outdata_P ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.628      ;
; -1.588 ; trans8to1:u5|outdata_P ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.628      ;
; -1.588 ; trans8to1:u5|outdata_P ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.628      ;
; -1.588 ; trans8to1:u5|outdata_P ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.628      ;
; -1.373 ; trans8to1:u5|outdata_N ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.413      ;
; -1.373 ; trans8to1:u5|outdata_N ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.413      ;
; -1.373 ; trans8to1:u5|outdata_N ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.413      ;
; -1.373 ; trans8to1:u5|outdata_N ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.413      ;
; -1.270 ; trans8to1:u5|outdata_P ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.310      ;
; -1.218 ; trans8to1:u5|outdata_N ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.258      ;
; -1.217 ; findv:u6|outdata[1]    ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.257      ;
; -1.157 ; findv:u6|flag2[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.197      ;
; -1.053 ; findv:u6|flag2[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.093      ;
; -1.041 ; findv:u6|flag1[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 2.081      ;
; -0.876 ; findv:u6|flag1[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.916      ;
; -0.779 ; trans8to1:u5|outdata_N ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.819      ;
; -0.463 ; findv:u6|outdata[0]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.503      ;
; -0.456 ; findv:u6|outdata[0]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.496      ;
; -0.336 ; trans8to1:u5|outdata_P ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.376      ;
; -0.182 ; delvb:u7|buffer[1]     ; delvb:u7|buffer[2]  ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.222      ;
; -0.159 ; delvb:u7|buffer[0]     ; delvb:u7|buffer[1]  ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.199      ;
; -0.043 ; findv:u6|outdata[1]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.083      ;
; -0.043 ; findv:u6|outdata[1]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.083      ;
; -0.024 ; findv:u6|flag1[0]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.064      ;
; -0.013 ; findv:u6|flag2[0]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.053      ;
; -0.009 ; delvb:u7|bufferdata    ; delvb:u7|buffer[0]  ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 1.049      ;
; 0.235  ; findv:u6|flag1[1]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; findv:u6|flag2[1]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; findv:u6|flag2[0]      ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; findv:u6|outdata[0]    ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; findv:u6|flag1[0]      ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; delvb:u7|bufferdata    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; delvb:u7|counterv      ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.805      ;
+--------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'even16_div:div16|clk_out'                                                                                                          ;
+--------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack  ; From Node             ; To Node               ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; -1.509 ; add_b:u2|counter1     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 2.549      ;
; -1.259 ; add_b:u2|counter1     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 2.299      ;
; -1.255 ; add_b:u2|counter1     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 2.295      ;
; -1.049 ; add_b:u2|counterv     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 2.089      ;
; -0.820 ; add_v:u1|data_out[0]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.860      ;
; -0.799 ; add_b:u2|counterv     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.839      ;
; -0.795 ; add_b:u2|counterv     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.835      ;
; -0.782 ; add_b:u2|buffer[3][1] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.822      ;
; -0.777 ; add_v:u1|data_out[0]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.817      ;
; -0.532 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.572      ;
; -0.528 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.568      ;
; -0.496 ; add_v:u1|counter[0]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.536      ;
; -0.491 ; polar:u3|even         ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.531      ;
; -0.459 ; polar:u3|even         ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.499      ;
; -0.456 ; add_b:u2|counterv     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.496      ;
; -0.452 ; add_v:u1|counter[0]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.492      ;
; -0.437 ; m_sequence:m|load     ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.477      ;
; -0.402 ; m_sequence:m|data_out ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.442      ;
; -0.399 ; m_sequence:m|data_out ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.439      ;
; -0.377 ; add_b:u2|buffer[2][1] ; add_b:u2|buffer[3][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.417      ;
; -0.357 ; add_v:u1|data_out[1]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.397      ;
; -0.354 ; add_v:u1|data_out[1]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.394      ;
; -0.352 ; add_b:u2|buffer[3][0] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.392      ;
; -0.352 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.392      ;
; -0.352 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.392      ;
; -0.347 ; add_v:u1|data_out[0]  ; add_b:u2|buffer[0][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.387      ;
; -0.314 ; m_sequence:m|temp[6]  ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.354      ;
; -0.299 ; add_b:u2|buffer[1][1] ; add_b:u2|buffer[2][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.339      ;
; -0.209 ; m_sequence:m|data_out ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.249      ;
; -0.185 ; m_sequence:m|temp[6]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.225      ;
; -0.175 ; add_b:u2|buffer[2][0] ; add_b:u2|buffer[3][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.215      ;
; -0.168 ; add_b:u2|buffer[0][0] ; add_b:u2|buffer[1][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.208      ;
; -0.161 ; m_sequence:m|data_out ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.201      ;
; -0.024 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.064      ;
; -0.020 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[3]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.060      ;
; -0.020 ; add_v:u1|data_out[1]  ; add_b:u2|buffer[0][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.060      ;
; -0.018 ; m_sequence:m|temp[3]  ; m_sequence:m|temp[4]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.058      ;
; -0.018 ; add_v:u1|counter[0]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.058      ;
; -0.017 ; m_sequence:m|temp[1]  ; m_sequence:m|temp[2]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.057      ;
; -0.014 ; add_b:u2|buffer[0][1] ; add_b:u2|buffer[1][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.054      ;
; -0.014 ; add_v:u1|counter[1]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.054      ;
; -0.013 ; polar:u3|polar_out.10 ; change:u4|data_out[0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.053      ;
; -0.013 ; add_v:u1|counter[1]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.053      ;
; -0.010 ; m_sequence:m|temp[5]  ; m_sequence:m|temp[6]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.050      ;
; -0.009 ; add_b:u2|buffer[1][0] ; add_b:u2|buffer[2][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.049      ;
; -0.008 ; polar:u3|polar_out.01 ; change:u4|data_out[7] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.048      ;
; -0.007 ; m_sequence:m|temp[4]  ; m_sequence:m|temp[5]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.047      ;
; -0.004 ; m_sequence:m|temp[0]  ; m_sequence:m|temp[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 1.044      ;
; 0.235  ; polar:u3|even         ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; add_b:u2|counter1     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; add_b:u2|counterv     ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; m_sequence:m|data_out ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; add_v:u1|counter[1]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.805      ;
; 0.235  ; add_v:u1|counter[0]   ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.805      ;
+--------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'even256_div:div256|clk_out'                                                                                                                     ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                   ; Launch Clock               ; Latch Clock                ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; -2.972 ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 0.000        ; 3.167      ; 0.805      ;
; -2.972 ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; 0.000        ; 3.167      ; 0.805      ;
; -2.472 ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; -0.500       ; 3.167      ; 0.805      ;
; -2.472 ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; -0.500       ; 3.167      ; 0.805      ;
; 0.499  ; even16_div:div16|count[0] ; even16_div:div16|count[0] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; even16_div:div16|count[1] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; even16_div:div16|count[2] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; recover:u8|counter[0]     ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; recover:u8|counter[1]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; recover:u8|counter[2]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499  ; recover:u8|counter[3]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.750  ; even16_div:div16|count[1] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.056      ;
; 0.750  ; even16_div:div16|count[1] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.056      ;
; 0.763  ; even16_div:div16|count[0] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.069      ;
; 1.044  ; recover:u8|counter[1]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.350      ;
; 1.084  ; recover:u8|flag           ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.390      ;
; 1.085  ; recover:u8|flag           ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.391      ;
; 1.176  ; even16_div:div16|count[2] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.482      ;
; 1.181  ; recover:u8|counter[2]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.487      ;
; 1.186  ; recover:u8|counter[1]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.492      ;
; 1.188  ; even16_div:div16|count[0] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.494      ;
; 1.234  ; recover:u8|counter[0]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.540      ;
; 1.240  ; recover:u8|counter[0]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.546      ;
; 1.240  ; recover:u8|counter[0]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.546      ;
; 1.322  ; recover:u8|counter[3]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.628      ;
; 1.432  ; even16_div:div16|count[0] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.738      ;
; 1.447  ; recover:u8|flag           ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.753      ;
; 1.487  ; recover:u8|buffer[6]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.793      ;
; 1.505  ; recover:u8|counter[2]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.811      ;
; 1.508  ; recover:u8|flag           ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.814      ;
; 1.582  ; recover:u8|flag           ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.888      ;
; 1.582  ; recover:u8|flag           ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.888      ;
; 1.637  ; recover:u8|counter[1]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.943      ;
; 1.649  ; recover:u8|buffer[3]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.955      ;
; 1.661  ; recover:u8|buffer[7]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 1.967      ;
; 1.768  ; recover:u8|counter[0]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 2.074      ;
; 1.768  ; recover:u8|buffer[5]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 2.074      ;
; 1.910  ; recover:u8|buffer[4]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 2.216      ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                 ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock               ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; -2.617 ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; 0.000        ; 2.812      ; 0.805      ;
; -2.117 ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; -0.500       ; 2.812      ; 0.805      ;
; 0.757  ; even256_div:div256|count[7] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.063      ;
; 1.177  ; even256_div:div256|count[0] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.483      ;
; 1.177  ; even256_div:div256|count[2] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.483      ;
; 1.183  ; even256_div:div256|count[7] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.489      ;
; 1.225  ; even256_div:div256|count[6] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.531      ;
; 1.234  ; even256_div:div256|count[1] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.540      ;
; 1.235  ; even256_div:div256|count[3] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.541      ;
; 1.235  ; even256_div:div256|count[4] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.541      ;
; 1.432  ; even256_div:div256|count[5] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.738      ;
; 1.634  ; even256_div:div256|count[3] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.940      ;
; 1.655  ; even256_div:div256|count[0] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.961      ;
; 1.656  ; even256_div:div256|count[2] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.962      ;
; 1.705  ; even256_div:div256|count[6] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.011      ;
; 1.714  ; even256_div:div256|count[1] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.020      ;
; 1.715  ; even256_div:div256|count[3] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.021      ;
; 1.715  ; even256_div:div256|count[4] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.021      ;
; 1.741  ; even256_div:div256|count[0] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.047      ;
; 1.742  ; even256_div:div256|count[2] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.048      ;
; 1.800  ; even256_div:div256|count[2] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.106      ;
; 1.800  ; even256_div:div256|count[1] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.106      ;
; 1.801  ; even256_div:div256|count[3] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.107      ;
; 1.827  ; even256_div:div256|count[0] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.133      ;
; 1.828  ; even256_div:div256|count[2] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.134      ;
; 1.886  ; even256_div:div256|count[1] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.192      ;
; 1.905  ; even256_div:div256|count[4] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.211      ;
; 1.913  ; even256_div:div256|count[0] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.219      ;
; 1.972  ; even256_div:div256|count[1] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.278      ;
; 1.991  ; even256_div:div256|count[4] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.297      ;
; 1.991  ; even256_div:div256|count[3] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.297      ;
; 1.999  ; even256_div:div256|count[0] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.305      ;
; 2.018  ; even256_div:div256|count[2] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.324      ;
; 2.026  ; even256_div:div256|count[5] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.332      ;
; 2.051  ; even256_div:div256|count[0] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.357      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.064  ; even256_div:div256|count[7] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.370      ;
; 2.077  ; even256_div:div256|count[3] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.383      ;
; 2.104  ; even256_div:div256|count[2] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.410      ;
; 2.112  ; even256_div:div256|count[1] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.418      ;
; 2.112  ; even256_div:div256|count[5] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.418      ;
; 2.162  ; even256_div:div256|count[1] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.468      ;
; 2.189  ; even256_div:div256|count[0] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.495      ;
; 2.248  ; even256_div:div256|count[1] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.554      ;
; 2.275  ; even256_div:div256|count[6] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.581      ;
; 2.275  ; even256_div:div256|count[0] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.581      ;
; 2.305  ; even256_div:div256|count[5] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.611      ;
; 2.385  ; even256_div:div256|count[6] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.691      ;
; 2.385  ; even256_div:div256|count[6] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.691      ;
; 2.385  ; even256_div:div256|count[6] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.691      ;
; 2.385  ; even256_div:div256|count[6] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.691      ;
; 2.385  ; even256_div:div256|count[6] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.691      ;
; 2.385  ; even256_div:div256|count[6] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.691      ;
; 2.404  ; even256_div:div256|count[3] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.710      ;
; 2.404  ; even256_div:div256|count[3] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.710      ;
; 2.404  ; even256_div:div256|count[3] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.710      ;
; 2.415  ; even256_div:div256|count[5] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.721      ;
; 2.415  ; even256_div:div256|count[5] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.721      ;
; 2.415  ; even256_div:div256|count[5] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.721      ;
; 2.415  ; even256_div:div256|count[5] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.721      ;
; 2.415  ; even256_div:div256|count[5] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.721      ;
; 2.570  ; even256_div:div256|count[2] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.876      ;
; 2.570  ; even256_div:div256|count[2] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.876      ;
; 2.586  ; even256_div:div256|count[4] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 2.892      ;
; 2.696  ; even256_div:div256|count[4] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 3.002      ;
; 2.696  ; even256_div:div256|count[4] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 3.002      ;
; 2.696  ; even256_div:div256|count[4] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 3.002      ;
; 2.696  ; even256_div:div256|count[4] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 3.002      ;
; 2.882  ; even256_div:div256|count[1] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 3.188      ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'even16_div:div16|clk_out'                                                                                                          ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack ; From Node             ; To Node               ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; 0.499 ; m_sequence:m|data_out ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; add_v:u1|counter[0]   ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; add_v:u1|counter[1]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; add_b:u2|counterv     ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; add_b:u2|counter1     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; polar:u3|even         ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.738 ; m_sequence:m|temp[0]  ; m_sequence:m|temp[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.044      ;
; 0.741 ; m_sequence:m|temp[4]  ; m_sequence:m|temp[5]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.047      ;
; 0.742 ; polar:u3|polar_out.01 ; change:u4|data_out[7] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.048      ;
; 0.743 ; add_b:u2|buffer[1][0] ; add_b:u2|buffer[2][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.049      ;
; 0.744 ; m_sequence:m|temp[5]  ; m_sequence:m|temp[6]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.050      ;
; 0.747 ; add_v:u1|counter[1]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.053      ;
; 0.747 ; polar:u3|polar_out.10 ; change:u4|data_out[0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.053      ;
; 0.748 ; add_v:u1|counter[1]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.054      ;
; 0.748 ; add_b:u2|buffer[0][1] ; add_b:u2|buffer[1][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.054      ;
; 0.751 ; m_sequence:m|temp[1]  ; m_sequence:m|temp[2]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.057      ;
; 0.752 ; m_sequence:m|temp[3]  ; m_sequence:m|temp[4]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.058      ;
; 0.752 ; add_v:u1|counter[0]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.058      ;
; 0.754 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[3]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.060      ;
; 0.754 ; add_v:u1|data_out[1]  ; add_b:u2|buffer[0][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.060      ;
; 0.758 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.064      ;
; 0.895 ; m_sequence:m|data_out ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.201      ;
; 0.902 ; add_b:u2|buffer[0][0] ; add_b:u2|buffer[1][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.208      ;
; 0.909 ; add_b:u2|buffer[2][0] ; add_b:u2|buffer[3][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.215      ;
; 0.919 ; m_sequence:m|temp[6]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.225      ;
; 0.943 ; m_sequence:m|data_out ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.249      ;
; 1.033 ; add_b:u2|buffer[1][1] ; add_b:u2|buffer[2][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.339      ;
; 1.048 ; m_sequence:m|temp[6]  ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.354      ;
; 1.081 ; add_v:u1|data_out[0]  ; add_b:u2|buffer[0][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.387      ;
; 1.086 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.392      ;
; 1.086 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.392      ;
; 1.086 ; add_b:u2|buffer[3][0] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.392      ;
; 1.088 ; add_v:u1|data_out[1]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.394      ;
; 1.091 ; add_v:u1|data_out[1]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.397      ;
; 1.111 ; add_b:u2|buffer[2][1] ; add_b:u2|buffer[3][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.417      ;
; 1.133 ; m_sequence:m|data_out ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.439      ;
; 1.136 ; m_sequence:m|data_out ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.442      ;
; 1.171 ; m_sequence:m|load     ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.477      ;
; 1.186 ; add_v:u1|counter[0]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.492      ;
; 1.190 ; add_b:u2|counterv     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.496      ;
; 1.193 ; polar:u3|even         ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.499      ;
; 1.225 ; polar:u3|even         ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.531      ;
; 1.230 ; add_v:u1|counter[0]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.536      ;
; 1.262 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.568      ;
; 1.266 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.572      ;
; 1.354 ; add_b:u2|counterv     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.660      ;
; 1.354 ; add_b:u2|counterv     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.660      ;
; 1.354 ; add_b:u2|counterv     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.660      ;
; 1.511 ; add_v:u1|data_out[0]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.817      ;
; 1.516 ; add_b:u2|buffer[3][1] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.822      ;
; 1.554 ; add_v:u1|data_out[0]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 1.860      ;
; 1.815 ; add_b:u2|counter1     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 2.121      ;
; 1.815 ; add_b:u2|counter1     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 2.121      ;
; 1.815 ; add_b:u2|counter1     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 2.121      ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'recover:u8|clk_out'                                                                                                   ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; Slack ; From Node              ; To Node             ; Launch Clock       ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; 0.499 ; findv:u6|flag1[0]      ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; findv:u6|flag1[1]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; findv:u6|flag2[0]      ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; findv:u6|flag2[1]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; findv:u6|outdata[0]    ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; delvb:u7|bufferdata    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; delvb:u7|counterv      ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.805      ;
; 0.743 ; delvb:u7|bufferdata    ; delvb:u7|buffer[0]  ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.049      ;
; 0.747 ; findv:u6|flag2[0]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.053      ;
; 0.758 ; findv:u6|flag1[0]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.064      ;
; 0.777 ; findv:u6|outdata[1]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.083      ;
; 0.777 ; findv:u6|outdata[1]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.083      ;
; 0.893 ; delvb:u7|buffer[0]     ; delvb:u7|buffer[1]  ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.199      ;
; 0.916 ; delvb:u7|buffer[1]     ; delvb:u7|buffer[2]  ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.222      ;
; 1.070 ; trans8to1:u5|outdata_P ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.376      ;
; 1.079 ; trans8to1:u5|outdata_P ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.385      ;
; 1.081 ; trans8to1:u5|outdata_P ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.387      ;
; 1.190 ; findv:u6|outdata[0]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.496      ;
; 1.197 ; findv:u6|outdata[0]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.503      ;
; 1.403 ; trans8to1:u5|outdata_N ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.709      ;
; 1.513 ; trans8to1:u5|outdata_N ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.819      ;
; 1.513 ; trans8to1:u5|outdata_N ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.819      ;
; 1.550 ; trans8to1:u5|outdata_N ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.856      ;
; 1.610 ; findv:u6|flag1[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 1.916      ;
; 1.742 ; trans8to1:u5|outdata_N ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.048      ;
; 1.775 ; trans8to1:u5|outdata_P ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.081      ;
; 1.775 ; findv:u6|flag1[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.081      ;
; 1.787 ; findv:u6|flag2[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.093      ;
; 1.822 ; trans8to1:u5|outdata_N ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.128      ;
; 1.856 ; trans8to1:u5|outdata_P ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.162      ;
; 1.857 ; trans8to1:u5|outdata_P ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.163      ;
; 1.891 ; findv:u6|flag2[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.197      ;
; 1.951 ; findv:u6|outdata[1]    ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 2.257      ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                        ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; -1.941 ; 1.000        ; 2.941          ; Port Rate        ; clk   ; Rise       ; clk                         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|clk_out  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|clk_out  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[0] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[0] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[1] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[1] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[2] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[2] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[3] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[3] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[4] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[4] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[5] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[5] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[6] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[6] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[7] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[7] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|clk_out|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|clk_out|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[7]|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'even16_div:div16|clk_out'                                                                         ;
+--------+--------------+----------------+------------------+--------------------------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                    ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+--------------------------+------------+--------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][0]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][0]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][1]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][1]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][0]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][0]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][1]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][1]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][0]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][0]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][1]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][1]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][0]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][0]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][1]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][1]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counter1              ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counter1              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counterv              ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counterv              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[0]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[0]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[1]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[1]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[0]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[0]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[1]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[1]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[0]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[0]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[7]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[7]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|data_out          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|data_out          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|load              ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|load              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[0]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[0]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[1]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[1]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[2]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[2]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[3]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[3]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[4]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[4]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[5]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[5]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[6]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[6]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; polar:u3|even                  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; polar:u3|even                  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.01          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.01          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.10          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.10          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; div16|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; div16|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|data_out|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|data_out|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|load|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|load|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[4]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[4]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[5]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[5]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[6]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[6]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|counter[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|counter[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|counter[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|counter[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|data_out[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|data_out[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|data_out[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|data_out[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][1]|clk            ;
+--------+--------------+----------------+------------------+--------------------------+------------+--------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'even256_div:div256|clk_out'                                                                          ;
+--------+--------------+----------------+------------------+----------------------------+------------+---------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                      ; Clock Edge ; Target                          ;
+--------+--------------+----------------+------------------+----------------------------+------------+---------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|clk_out        ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|clk_out        ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[0]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[0]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[1]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[1]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[2]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[2]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[3]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[3]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[4]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[4]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[5]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[5]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[6]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[6]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[7]            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[7]            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|clk_out              ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|clk_out              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[0]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[0]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[1]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[1]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[2]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[2]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[3]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[3]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|flag                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|flag                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|clk_out|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|clk_out|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|count[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|count[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|count[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|count[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|count[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|count[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div256|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div256|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[3]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[3]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[4]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[4]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[5]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[5]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[6]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[6]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[7]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[7]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|clk_out|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|clk_out|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[3]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[3]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|flag|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|flag|clk                     ;
+--------+--------------+----------------+------------------+----------------------------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'recover:u8|clk_out'                                                                      ;
+--------+--------------+----------------+------------------+--------------------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock              ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+--------------------+------------+-----------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[0]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[0]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[1]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[1]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[2]          ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[2]          ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|bufferdata         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|bufferdata         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|counterv           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|counterv           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[0]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[0]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[1]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[1]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[0]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[0]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[1]           ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[1]           ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[0]         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[0]         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[1]         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[1]         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_N      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_N      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_P      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_P      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u5|outdata_N|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u5|outdata_N|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u5|outdata_P|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u5|outdata_P|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag1[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag1[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag1[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag1[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag2[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag2[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag2[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag2[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|outdata[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|outdata[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|outdata[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|outdata[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|buffer[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|buffer[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|buffer[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|buffer[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|buffer[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|buffer[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|bufferdata|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|bufferdata|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|counterv|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|counterv|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u8|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u8|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|outclk   ;
+--------+--------------+----------------+------------------+--------------------+------------+-----------------------------+


+----------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                              ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port       ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; ena             ; even16_div:div16|clk_out   ; 5.309  ; 5.309  ; Rise       ; even16_div:div16|clk_out   ;
; rst             ; even16_div:div16|clk_out   ; 5.087  ; 5.087  ; Rise       ; even16_div:div16|clk_out   ;
; data_out_ad[*]  ; even256_div:div256|clk_out ; 7.049  ; 7.049  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[3] ; even256_div:div256|clk_out ; 6.829  ; 6.829  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[4] ; even256_div:div256|clk_out ; 6.388  ; 6.388  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[5] ; even256_div:div256|clk_out ; 6.547  ; 6.547  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[6] ; even256_div:div256|clk_out ; 7.010  ; 7.010  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[7] ; even256_div:div256|clk_out ; 7.049  ; 7.049  ; Rise       ; even256_div:div256|clk_out ;
; data_out_ad[*]  ; recover:u8|clk_out         ; 10.317 ; 10.317 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[3] ; recover:u8|clk_out         ; 9.849  ; 9.849  ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[4] ; recover:u8|clk_out         ; 9.775  ; 9.775  ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[5] ; recover:u8|clk_out         ; 10.317 ; 10.317 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[6] ; recover:u8|clk_out         ; 8.538  ; 8.538  ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[7] ; recover:u8|clk_out         ; 8.351  ; 8.351  ; Rise       ; recover:u8|clk_out         ;
; rst             ; recover:u8|clk_out         ; 6.981  ; 6.981  ; Rise       ; recover:u8|clk_out         ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                               ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port       ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; ena             ; even16_div:div16|clk_out   ; -4.566 ; -4.566 ; Rise       ; even16_div:div16|clk_out   ;
; rst             ; even16_div:div16|clk_out   ; -4.492 ; -4.492 ; Rise       ; even16_div:div16|clk_out   ;
; data_out_ad[*]  ; even256_div:div256|clk_out ; -3.953 ; -3.953 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[3] ; even256_div:div256|clk_out ; -3.953 ; -3.953 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[4] ; even256_div:div256|clk_out ; -3.971 ; -3.971 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[5] ; even256_div:div256|clk_out ; -4.671 ; -4.671 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[6] ; even256_div:div256|clk_out ; -4.338 ; -4.338 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[7] ; even256_div:div256|clk_out ; -4.320 ; -4.320 ; Rise       ; even256_div:div256|clk_out ;
; data_out_ad[*]  ; recover:u8|clk_out         ; -6.972 ; -6.972 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[3] ; recover:u8|clk_out         ; -7.868 ; -7.868 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[4] ; recover:u8|clk_out         ; -7.651 ; -7.651 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[5] ; recover:u8|clk_out         ; -7.803 ; -7.803 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[6] ; recover:u8|clk_out         ; -7.041 ; -7.041 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[7] ; recover:u8|clk_out         ; -6.972 ; -6.972 ; Rise       ; recover:u8|clk_out         ;
; rst             ; recover:u8|clk_out         ; -6.715 ; -6.715 ; Rise       ; recover:u8|clk_out         ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+


+--------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                  ;
+---------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port     ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+---------------+----------------------------+--------+--------+------------+----------------------------+
; clk_16        ; even16_div:div16|clk_out   ; 6.525  ;        ; Rise       ; even16_div:div16|clk_out   ;
; data_out[*]   ; even16_div:div16|clk_out   ; 8.544  ; 8.544  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[0]  ; even16_div:div16|clk_out   ; 7.340  ; 7.340  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[1]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[2]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[3]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[4]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[5]  ; even16_div:div16|clk_out   ; 7.766  ; 7.766  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[6]  ; even16_div:div16|clk_out   ; 7.742  ; 7.742  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[7]  ; even16_div:div16|clk_out   ; 8.544  ; 8.544  ; Rise       ; even16_div:div16|clk_out   ;
; outN          ; even16_div:div16|clk_out   ; 7.057  ; 7.057  ; Rise       ; even16_div:div16|clk_out   ;
; outP          ; even16_div:div16|clk_out   ; 7.813  ; 7.813  ; Rise       ; even16_div:div16|clk_out   ;
; outb[*]       ; even16_div:div16|clk_out   ; 8.322  ; 8.322  ; Rise       ; even16_div:div16|clk_out   ;
;  outb[0]      ; even16_div:div16|clk_out   ; 7.908  ; 7.908  ; Rise       ; even16_div:div16|clk_out   ;
;  outb[1]      ; even16_div:div16|clk_out   ; 8.322  ; 8.322  ; Rise       ; even16_div:div16|clk_out   ;
; outm          ; even16_div:div16|clk_out   ; 8.502  ; 8.502  ; Rise       ; even16_div:div16|clk_out   ;
; outv[*]       ; even16_div:div16|clk_out   ; 6.903  ; 6.903  ; Rise       ; even16_div:div16|clk_out   ;
;  outv[0]      ; even16_div:div16|clk_out   ; 6.903  ; 6.903  ; Rise       ; even16_div:div16|clk_out   ;
;  outv[1]      ; even16_div:div16|clk_out   ; 6.898  ; 6.898  ; Rise       ; even16_div:div16|clk_out   ;
; clk_16        ; even16_div:div16|clk_out   ;        ; 6.525  ; Fall       ; even16_div:div16|clk_out   ;
; clk_256       ; even256_div:div256|clk_out ; 7.526  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ; 5.375  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ; 6.675  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256       ; even256_div:div256|clk_out ;        ; 7.526  ; Fall       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ;        ; 5.375  ; Fall       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ;        ; 6.675  ; Fall       ; even256_div:div256|clk_out ;
; clk_recover   ; recover:u8|clk_out         ; 7.903  ;        ; Rise       ; recover:u8|clk_out         ;
; finallyout    ; recover:u8|clk_out         ; 10.550 ; 10.550 ; Rise       ; recover:u8|clk_out         ;
; outdata_N     ; recover:u8|clk_out         ; 6.982  ; 6.982  ; Rise       ; recover:u8|clk_out         ;
; outdata_P     ; recover:u8|clk_out         ; 6.968  ; 6.968  ; Rise       ; recover:u8|clk_out         ;
; outdata_v[*]  ; recover:u8|clk_out         ; 6.949  ; 6.949  ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[0] ; recover:u8|clk_out         ; 6.948  ; 6.948  ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[1] ; recover:u8|clk_out         ; 6.949  ; 6.949  ; Rise       ; recover:u8|clk_out         ;
; clk_recover   ; recover:u8|clk_out         ;        ; 7.903  ; Fall       ; recover:u8|clk_out         ;
+---------------+----------------------------+--------+--------+------------+----------------------------+


+--------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                          ;
+---------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port     ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+---------------+----------------------------+--------+--------+------------+----------------------------+
; clk_16        ; even16_div:div16|clk_out   ; 6.525  ;        ; Rise       ; even16_div:div16|clk_out   ;
; data_out[*]   ; even16_div:div16|clk_out   ; 7.340  ; 7.340  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[0]  ; even16_div:div16|clk_out   ; 7.340  ; 7.340  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[1]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[2]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[3]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[4]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[5]  ; even16_div:div16|clk_out   ; 7.766  ; 7.766  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[6]  ; even16_div:div16|clk_out   ; 7.742  ; 7.742  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[7]  ; even16_div:div16|clk_out   ; 8.544  ; 8.544  ; Rise       ; even16_div:div16|clk_out   ;
; outN          ; even16_div:div16|clk_out   ; 7.057  ; 7.057  ; Rise       ; even16_div:div16|clk_out   ;
; outP          ; even16_div:div16|clk_out   ; 7.813  ; 7.813  ; Rise       ; even16_div:div16|clk_out   ;
; outb[*]       ; even16_div:div16|clk_out   ; 7.179  ; 7.179  ; Rise       ; even16_div:div16|clk_out   ;
;  outb[0]      ; even16_div:div16|clk_out   ; 7.179  ; 7.179  ; Rise       ; even16_div:div16|clk_out   ;
;  outb[1]      ; even16_div:div16|clk_out   ; 7.595  ; 7.595  ; Rise       ; even16_div:div16|clk_out   ;
; outm          ; even16_div:div16|clk_out   ; 8.502  ; 8.502  ; Rise       ; even16_div:div16|clk_out   ;
; outv[*]       ; even16_div:div16|clk_out   ; 6.898  ; 6.898  ; Rise       ; even16_div:div16|clk_out   ;
;  outv[0]      ; even16_div:div16|clk_out   ; 6.903  ; 6.903  ; Rise       ; even16_div:div16|clk_out   ;
;  outv[1]      ; even16_div:div16|clk_out   ; 6.898  ; 6.898  ; Rise       ; even16_div:div16|clk_out   ;
; clk_16        ; even16_div:div16|clk_out   ;        ; 6.525  ; Fall       ; even16_div:div16|clk_out   ;
; clk_256       ; even256_div:div256|clk_out ; 7.526  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ; 5.375  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ; 6.675  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256       ; even256_div:div256|clk_out ;        ; 7.526  ; Fall       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ;        ; 5.375  ; Fall       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ;        ; 6.675  ; Fall       ; even256_div:div256|clk_out ;
; clk_recover   ; recover:u8|clk_out         ; 7.903  ;        ; Rise       ; recover:u8|clk_out         ;
; finallyout    ; recover:u8|clk_out         ; 10.291 ; 10.291 ; Rise       ; recover:u8|clk_out         ;
; outdata_N     ; recover:u8|clk_out         ; 6.982  ; 6.982  ; Rise       ; recover:u8|clk_out         ;
; outdata_P     ; recover:u8|clk_out         ; 6.968  ; 6.968  ; Rise       ; recover:u8|clk_out         ;
; outdata_v[*]  ; recover:u8|clk_out         ; 6.948  ; 6.948  ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[0] ; recover:u8|clk_out         ; 6.948  ; 6.948  ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[1] ; recover:u8|clk_out         ; 6.949  ; 6.949  ; Rise       ; recover:u8|clk_out         ;
; clk_recover   ; recover:u8|clk_out         ;        ; 7.903  ; Fall       ; recover:u8|clk_out         ;
+---------------+----------------------------+--------+--------+------------+----------------------------+


+----------------------------------------------------------------+
; Propagation Delay                                              ;
+----------------+-------------------+--------+----+----+--------+
; Input Port     ; Output Port       ; RR     ; RF ; FR ; FF     ;
+----------------+-------------------+--------+----+----+--------+
; data_out_ad[0] ; data_out_check[0] ; 10.797 ;    ;    ; 10.797 ;
; data_out_ad[1] ; data_out_check[1] ; 10.851 ;    ;    ; 10.851 ;
; data_out_ad[2] ; data_out_check[2] ; 10.542 ;    ;    ; 10.542 ;
; data_out_ad[3] ; data_out_check[3] ; 11.165 ;    ;    ; 11.165 ;
; data_out_ad[4] ; data_out_check[4] ; 11.027 ;    ;    ; 11.027 ;
; data_out_ad[5] ; data_out_check[5] ; 11.222 ;    ;    ; 11.222 ;
; data_out_ad[6] ; data_out_check[6] ; 11.183 ;    ;    ; 11.183 ;
; data_out_ad[7] ; data_out_check[7] ; 10.817 ;    ;    ; 10.817 ;
; rst            ; outN              ; 10.807 ;    ;    ; 10.807 ;
; rst            ; outP              ; 11.559 ;    ;    ; 11.559 ;
+----------------+-------------------+--------+----+----+--------+


+----------------------------------------------------------------+
; Minimum Propagation Delay                                      ;
+----------------+-------------------+--------+----+----+--------+
; Input Port     ; Output Port       ; RR     ; RF ; FR ; FF     ;
+----------------+-------------------+--------+----+----+--------+
; data_out_ad[0] ; data_out_check[0] ; 10.797 ;    ;    ; 10.797 ;
; data_out_ad[1] ; data_out_check[1] ; 10.851 ;    ;    ; 10.851 ;
; data_out_ad[2] ; data_out_check[2] ; 10.542 ;    ;    ; 10.542 ;
; data_out_ad[3] ; data_out_check[3] ; 11.165 ;    ;    ; 11.165 ;
; data_out_ad[4] ; data_out_check[4] ; 11.027 ;    ;    ; 11.027 ;
; data_out_ad[5] ; data_out_check[5] ; 11.222 ;    ;    ; 11.222 ;
; data_out_ad[6] ; data_out_check[6] ; 11.183 ;    ;    ; 11.183 ;
; data_out_ad[7] ; data_out_check[7] ; 10.817 ;    ;    ; 10.817 ;
; rst            ; outN              ; 10.807 ;    ;    ; 10.807 ;
; rst            ; outP              ; 11.559 ;    ;    ; 11.559 ;
+----------------+-------------------+--------+----+----+--------+


+-----------------------------------------------------+
; Fast Model Setup Summary                            ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; clk                        ; -0.075 ; -0.600        ;
; recover:u8|clk_out         ; 0.058  ; 0.000         ;
; even256_div:div256|clk_out ; 0.164  ; 0.000         ;
; even16_div:div16|clk_out   ; 0.212  ; 0.000         ;
+----------------------------+--------+---------------+


+-----------------------------------------------------+
; Fast Model Hold Summary                             ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; clk                        ; -1.389 ; -1.389        ;
; even256_div:div256|clk_out ; -1.350 ; -2.700        ;
; even16_div:div16|clk_out   ; 0.215  ; 0.000         ;
; recover:u8|clk_out         ; 0.215  ; 0.000         ;
+----------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+-----------------------------------------------------+
; Fast Model Minimum Pulse Width Summary              ;
+----------------------------+--------+---------------+
; Clock                      ; Slack  ; End Point TNS ;
+----------------------------+--------+---------------+
; clk                        ; -1.380 ; -10.380       ;
; even16_div:div16|clk_out   ; -0.500 ; -28.000       ;
; even256_div:div256|clk_out ; -0.500 ; -15.000       ;
; recover:u8|clk_out         ; -0.500 ; -13.000       ;
+----------------------------+--------+---------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                                ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock               ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.075 ; even256_div:div256|count[1] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.107      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.058 ; even256_div:div256|count[0] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.090      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; even256_div:div256|count[4] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.010  ; even256_div:div256|count[2] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.022      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.031  ; even256_div:div256|count[5] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 1.001      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.035  ; even256_div:div256|count[3] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.066  ; even256_div:div256|count[6] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.128  ; even256_div:div256|count[4] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.904      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[0] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[1] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[2] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[3] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[4] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[5] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[6] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.159  ; even256_div:div256|count[7] ; even256_div:div256|count[7] ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.873      ;
; 0.176  ; even256_div:div256|count[5] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.856      ;
; 0.211  ; even256_div:div256|count[6] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.821      ;
; 0.253  ; even256_div:div256|count[1] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.779      ;
; 0.270  ; even256_div:div256|count[0] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.762      ;
; 0.338  ; even256_div:div256|count[2] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.694      ;
; 0.363  ; even256_div:div256|count[3] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.669      ;
; 0.514  ; even256_div:div256|count[7] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 1.000        ; 0.000      ; 0.518      ;
; 1.769  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; 0.500        ; 1.463      ; 0.367      ;
; 2.269  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; 1.000        ; 1.463      ; 0.367      ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'recover:u8|clk_out'                                                                                                  ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; Slack ; From Node              ; To Node             ; Launch Clock       ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; 0.058 ; trans8to1:u5|outdata_P ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.974      ;
; 0.058 ; trans8to1:u5|outdata_P ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.974      ;
; 0.058 ; trans8to1:u5|outdata_P ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.974      ;
; 0.058 ; trans8to1:u5|outdata_P ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.974      ;
; 0.129 ; trans8to1:u5|outdata_N ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.903      ;
; 0.129 ; trans8to1:u5|outdata_N ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.903      ;
; 0.129 ; trans8to1:u5|outdata_N ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.903      ;
; 0.129 ; trans8to1:u5|outdata_N ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.903      ;
; 0.252 ; trans8to1:u5|outdata_N ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.780      ;
; 0.269 ; trans8to1:u5|outdata_P ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.763      ;
; 0.283 ; findv:u6|outdata[1]    ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.749      ;
; 0.297 ; findv:u6|flag2[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.735      ;
; 0.341 ; findv:u6|flag2[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.691      ;
; 0.349 ; findv:u6|flag1[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.683      ;
; 0.398 ; findv:u6|flag1[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.634      ;
; 0.420 ; trans8to1:u5|outdata_N ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.612      ;
; 0.510 ; findv:u6|outdata[0]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.522      ;
; 0.510 ; findv:u6|outdata[0]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.522      ;
; 0.543 ; delvb:u7|buffer[1]     ; delvb:u7|buffer[2]  ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.489      ;
; 0.550 ; trans8to1:u5|outdata_P ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.482      ;
; 0.556 ; delvb:u7|buffer[0]     ; delvb:u7|buffer[1]  ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.476      ;
; 0.625 ; findv:u6|outdata[1]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.407      ;
; 0.626 ; findv:u6|outdata[1]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.406      ;
; 0.632 ; findv:u6|flag1[0]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.400      ;
; 0.638 ; findv:u6|flag2[0]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.394      ;
; 0.640 ; delvb:u7|bufferdata    ; delvb:u7|buffer[0]  ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.392      ;
; 0.665 ; findv:u6|flag1[1]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; findv:u6|flag2[1]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; findv:u6|flag2[0]      ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; findv:u6|flag1[0]      ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; findv:u6|outdata[0]    ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; delvb:u7|bufferdata    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; delvb:u7|counterv      ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 1.000        ; 0.000      ; 0.367      ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'even256_div:div256|clk_out'                                                                                                                   ;
+-------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; Slack ; From Node                 ; To Node                   ; Launch Clock               ; Latch Clock                ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; 0.164 ; recover:u8|buffer[6]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.868      ;
; 0.171 ; recover:u8|buffer[5]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.861      ;
; 0.177 ; recover:u8|buffer[4]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.855      ;
; 0.274 ; recover:u8|flag           ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.758      ;
; 0.274 ; recover:u8|flag           ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.758      ;
; 0.326 ; recover:u8|counter[0]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.706      ;
; 0.328 ; recover:u8|buffer[3]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.704      ;
; 0.342 ; recover:u8|counter[1]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.690      ;
; 0.354 ; recover:u8|buffer[7]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.678      ;
; 0.415 ; recover:u8|counter[2]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.617      ;
; 0.422 ; recover:u8|flag           ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.610      ;
; 0.425 ; recover:u8|flag           ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.607      ;
; 0.444 ; even16_div:div16|count[0] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.588      ;
; 0.470 ; recover:u8|counter[3]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.562      ;
; 0.497 ; recover:u8|counter[0]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.535      ;
; 0.498 ; recover:u8|counter[0]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.534      ;
; 0.503 ; recover:u8|counter[0]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.529      ;
; 0.514 ; even16_div:div16|count[0] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.518      ;
; 0.514 ; recover:u8|counter[2]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.518      ;
; 0.515 ; recover:u8|counter[1]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.517      ;
; 0.518 ; even16_div:div16|count[2] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.514      ;
; 0.539 ; recover:u8|flag           ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.493      ;
; 0.540 ; recover:u8|flag           ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.492      ;
; 0.559 ; recover:u8|counter[1]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.473      ;
; 0.631 ; even16_div:div16|count[0] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.401      ;
; 0.637 ; even16_div:div16|count[1] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.395      ;
; 0.637 ; even16_div:div16|count[1] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.395      ;
; 0.665 ; even16_div:div16|count[0] ; even16_div:div16|count[0] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; recover:u8|counter[0]     ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; recover:u8|counter[1]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; recover:u8|counter[2]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; recover:u8|counter[3]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; even16_div:div16|count[2] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; even16_div:div16|count[1] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 1.730 ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 0.500        ; 1.424      ; 0.367      ;
; 1.730 ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; 0.500        ; 1.424      ; 0.367      ;
; 2.230 ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 1.000        ; 1.424      ; 0.367      ;
; 2.230 ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; 1.000        ; 1.424      ; 0.367      ;
+-------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'even16_div:div16|clk_out'                                                                                                         ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack ; From Node             ; To Node               ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; 0.212 ; add_b:u2|counter1     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.820      ;
; 0.281 ; add_b:u2|counter1     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.751      ;
; 0.285 ; add_b:u2|counter1     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.747      ;
; 0.332 ; add_b:u2|counterv     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.700      ;
; 0.369 ; add_b:u2|buffer[3][1] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.663      ;
; 0.401 ; add_b:u2|counterv     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.631      ;
; 0.405 ; add_b:u2|counterv     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.627      ;
; 0.408 ; add_v:u1|data_out[0]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.001      ; 0.625      ;
; 0.416 ; add_v:u1|data_out[0]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.001      ; 0.617      ;
; 0.438 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.594      ;
; 0.442 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.590      ;
; 0.484 ; add_b:u2|buffer[2][1] ; add_b:u2|buffer[3][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.548      ;
; 0.493 ; add_b:u2|buffer[3][0] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.539      ;
; 0.493 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.539      ;
; 0.493 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.539      ;
; 0.494 ; m_sequence:m|data_out ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.538      ;
; 0.494 ; m_sequence:m|data_out ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.538      ;
; 0.498 ; add_v:u1|counter[0]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.534      ;
; 0.505 ; polar:u3|even         ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.527      ;
; 0.506 ; add_v:u1|counter[0]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.526      ;
; 0.509 ; polar:u3|even         ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.523      ;
; 0.511 ; add_b:u2|counterv     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.521      ;
; 0.521 ; m_sequence:m|load     ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.511      ;
; 0.539 ; add_v:u1|data_out[1]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.001      ; 0.494      ;
; 0.539 ; add_v:u1|data_out[1]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.001      ; 0.494      ;
; 0.544 ; add_v:u1|data_out[0]  ; add_b:u2|buffer[0][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.001      ; 0.489      ;
; 0.549 ; add_b:u2|buffer[2][0] ; add_b:u2|buffer[3][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.483      ;
; 0.553 ; add_b:u2|buffer[0][0] ; add_b:u2|buffer[1][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.479      ;
; 0.559 ; m_sequence:m|temp[6]  ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.473      ;
; 0.564 ; add_b:u2|buffer[1][1] ; add_b:u2|buffer[2][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.001      ; 0.469      ;
; 0.575 ; m_sequence:m|data_out ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.457      ;
; 0.578 ; m_sequence:m|data_out ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.454      ;
; 0.584 ; m_sequence:m|temp[6]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.448      ;
; 0.632 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.400      ;
; 0.635 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[3]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.397      ;
; 0.635 ; m_sequence:m|temp[3]  ; m_sequence:m|temp[4]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.397      ;
; 0.635 ; add_v:u1|counter[0]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.397      ;
; 0.636 ; m_sequence:m|temp[1]  ; m_sequence:m|temp[2]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.396      ;
; 0.637 ; add_v:u1|data_out[1]  ; add_b:u2|buffer[0][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.395      ;
; 0.637 ; add_b:u2|buffer[0][1] ; add_b:u2|buffer[1][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.395      ;
; 0.637 ; polar:u3|polar_out.10 ; change:u4|data_out[0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.395      ;
; 0.637 ; add_v:u1|counter[1]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.395      ;
; 0.638 ; add_v:u1|counter[1]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.394      ;
; 0.639 ; m_sequence:m|temp[5]  ; m_sequence:m|temp[6]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.393      ;
; 0.640 ; add_b:u2|buffer[1][0] ; add_b:u2|buffer[2][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.392      ;
; 0.641 ; m_sequence:m|temp[4]  ; m_sequence:m|temp[5]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.391      ;
; 0.641 ; polar:u3|polar_out.01 ; change:u4|data_out[7] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.391      ;
; 0.642 ; m_sequence:m|temp[0]  ; m_sequence:m|temp[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.390      ;
; 0.665 ; polar:u3|even         ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; add_b:u2|counterv     ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; add_b:u2|counter1     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; add_v:u1|counter[0]   ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; add_v:u1|counter[1]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.367      ;
; 0.665 ; m_sequence:m|data_out ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 1.000        ; 0.000      ; 0.367      ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                 ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                   ; To Node                     ; Launch Clock               ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+
; -1.389 ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; 0.000        ; 1.463      ; 0.367      ;
; -0.889 ; even256_div:div256|clk_out  ; even256_div:div256|clk_out  ; even256_div:div256|clk_out ; clk         ; -0.500       ; 1.463      ; 0.367      ;
; 0.246  ; even256_div:div256|count[7] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.398      ;
; 0.362  ; even256_div:div256|count[0] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.514      ;
; 0.363  ; even256_div:div256|count[2] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.515      ;
; 0.366  ; even256_div:div256|count[7] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.518      ;
; 0.373  ; even256_div:div256|count[6] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.525      ;
; 0.377  ; even256_div:div256|count[1] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.529      ;
; 0.378  ; even256_div:div256|count[3] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.530      ;
; 0.378  ; even256_div:div256|count[4] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.530      ;
; 0.439  ; even256_div:div256|count[5] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.591      ;
; 0.500  ; even256_div:div256|count[0] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.652      ;
; 0.501  ; even256_div:div256|count[2] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.653      ;
; 0.513  ; even256_div:div256|count[6] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.665      ;
; 0.517  ; even256_div:div256|count[1] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.669      ;
; 0.517  ; even256_div:div256|count[3] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.669      ;
; 0.518  ; even256_div:div256|count[3] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.670      ;
; 0.518  ; even256_div:div256|count[4] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.670      ;
; 0.535  ; even256_div:div256|count[0] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.687      ;
; 0.536  ; even256_div:div256|count[2] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.688      ;
; 0.542  ; even256_div:div256|count[2] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.694      ;
; 0.552  ; even256_div:div256|count[1] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.704      ;
; 0.553  ; even256_div:div256|count[3] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.705      ;
; 0.570  ; even256_div:div256|count[0] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.722      ;
; 0.571  ; even256_div:div256|count[2] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.723      ;
; 0.587  ; even256_div:div256|count[1] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.739      ;
; 0.605  ; even256_div:div256|count[0] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.757      ;
; 0.610  ; even256_div:div256|count[0] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.762      ;
; 0.612  ; even256_div:div256|count[4] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.764      ;
; 0.622  ; even256_div:div256|count[1] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.774      ;
; 0.627  ; even256_div:div256|count[1] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.779      ;
; 0.633  ; even256_div:div256|count[5] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.785      ;
; 0.640  ; even256_div:div256|count[0] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.792      ;
; 0.647  ; even256_div:div256|count[4] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.799      ;
; 0.647  ; even256_div:div256|count[3] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.799      ;
; 0.665  ; even256_div:div256|count[2] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.817      ;
; 0.668  ; even256_div:div256|count[5] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.820      ;
; 0.669  ; even256_div:div256|count[6] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.821      ;
; 0.682  ; even256_div:div256|count[3] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.834      ;
; 0.700  ; even256_div:div256|count[2] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.852      ;
; 0.704  ; even256_div:div256|count[5] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.856      ;
; 0.716  ; even256_div:div256|count[1] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.868      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.721  ; even256_div:div256|count[7] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.873      ;
; 0.734  ; even256_div:div256|count[0] ; even256_div:div256|count[6] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.886      ;
; 0.751  ; even256_div:div256|count[1] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.903      ;
; 0.752  ; even256_div:div256|count[4] ; even256_div:div256|clk_out  ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.904      ;
; 0.769  ; even256_div:div256|count[0] ; even256_div:div256|count[7] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.921      ;
; 0.814  ; even256_div:div256|count[6] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814  ; even256_div:div256|count[6] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814  ; even256_div:div256|count[6] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814  ; even256_div:div256|count[6] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814  ; even256_div:div256|count[6] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.814  ; even256_div:div256|count[6] ; even256_div:div256|count[5] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.845  ; even256_div:div256|count[3] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.997      ;
; 0.845  ; even256_div:div256|count[3] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.997      ;
; 0.845  ; even256_div:div256|count[3] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 0.997      ;
; 0.849  ; even256_div:div256|count[5] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.001      ;
; 0.849  ; even256_div:div256|count[5] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.001      ;
; 0.849  ; even256_div:div256|count[5] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.001      ;
; 0.849  ; even256_div:div256|count[5] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.001      ;
; 0.849  ; even256_div:div256|count[5] ; even256_div:div256|count[4] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.001      ;
; 0.870  ; even256_div:div256|count[2] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.022      ;
; 0.870  ; even256_div:div256|count[2] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.022      ;
; 0.897  ; even256_div:div256|count[4] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897  ; even256_div:div256|count[4] ; even256_div:div256|count[1] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897  ; even256_div:div256|count[4] ; even256_div:div256|count[2] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897  ; even256_div:div256|count[4] ; even256_div:div256|count[3] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.955  ; even256_div:div256|count[1] ; even256_div:div256|count[0] ; clk                        ; clk         ; 0.000        ; 0.000      ; 1.107      ;
+--------+-----------------------------+-----------------------------+----------------------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'even256_div:div256|clk_out'                                                                                                                     ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; Slack  ; From Node                 ; To Node                   ; Launch Clock               ; Latch Clock                ; Relationship ; Clock Skew ; Data Delay ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+
; -1.350 ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 0.000        ; 1.424      ; 0.367      ;
; -1.350 ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; 0.000        ; 1.424      ; 0.367      ;
; -0.850 ; even16_div:div16|clk_out  ; even16_div:div16|clk_out  ; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; -0.500       ; 1.424      ; 0.367      ;
; -0.850 ; recover:u8|clk_out        ; recover:u8|clk_out        ; recover:u8|clk_out         ; even256_div:div256|clk_out ; -0.500       ; 1.424      ; 0.367      ;
; 0.215  ; even16_div:div16|count[0] ; even16_div:div16|count[0] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; even16_div:div16|count[1] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; even16_div:div16|count[2] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; recover:u8|counter[0]     ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; recover:u8|counter[1]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; recover:u8|counter[2]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215  ; recover:u8|counter[3]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.243  ; even16_div:div16|count[1] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243  ; even16_div:div16|count[1] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.249  ; even16_div:div16|count[0] ; even16_div:div16|count[1] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.401      ;
; 0.321  ; recover:u8|counter[1]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.473      ;
; 0.340  ; recover:u8|flag           ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.492      ;
; 0.341  ; recover:u8|flag           ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.493      ;
; 0.362  ; even16_div:div16|count[2] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.514      ;
; 0.365  ; recover:u8|counter[1]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.517      ;
; 0.366  ; even16_div:div16|count[0] ; even16_div:div16|count[2] ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.518      ;
; 0.366  ; recover:u8|counter[2]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.518      ;
; 0.377  ; recover:u8|counter[0]     ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.529      ;
; 0.382  ; recover:u8|counter[0]     ; recover:u8|counter[2]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.534      ;
; 0.383  ; recover:u8|counter[0]     ; recover:u8|counter[1]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.535      ;
; 0.410  ; recover:u8|counter[3]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.562      ;
; 0.436  ; even16_div:div16|count[0] ; even16_div:div16|clk_out  ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.588      ;
; 0.455  ; recover:u8|flag           ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.607      ;
; 0.458  ; recover:u8|flag           ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.610      ;
; 0.460  ; recover:u8|buffer[6]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.612      ;
; 0.465  ; recover:u8|counter[2]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.617      ;
; 0.511  ; recover:u8|buffer[7]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.663      ;
; 0.538  ; recover:u8|counter[1]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.690      ;
; 0.538  ; recover:u8|buffer[5]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.690      ;
; 0.552  ; recover:u8|buffer[3]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.704      ;
; 0.554  ; recover:u8|counter[0]     ; recover:u8|clk_out        ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.706      ;
; 0.585  ; recover:u8|buffer[4]      ; recover:u8|flag           ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.737      ;
; 0.606  ; recover:u8|flag           ; recover:u8|counter[0]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.758      ;
; 0.606  ; recover:u8|flag           ; recover:u8|counter[3]     ; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 0.000        ; 0.000      ; 0.758      ;
+--------+---------------------------+---------------------------+----------------------------+----------------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'even16_div:div16|clk_out'                                                                                                          ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; Slack ; From Node             ; To Node               ; Launch Clock             ; Latch Clock              ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+
; 0.215 ; m_sequence:m|data_out ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; add_v:u1|counter[0]   ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; add_v:u1|counter[1]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; add_b:u2|counterv     ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; add_b:u2|counter1     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; polar:u3|even         ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.238 ; m_sequence:m|temp[0]  ; m_sequence:m|temp[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.390      ;
; 0.239 ; m_sequence:m|temp[4]  ; m_sequence:m|temp[5]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.239 ; polar:u3|polar_out.01 ; change:u4|data_out[7] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.391      ;
; 0.240 ; add_b:u2|buffer[1][0] ; add_b:u2|buffer[2][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.392      ;
; 0.241 ; m_sequence:m|temp[5]  ; m_sequence:m|temp[6]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.393      ;
; 0.242 ; add_v:u1|counter[1]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.394      ;
; 0.243 ; add_v:u1|counter[1]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; add_v:u1|data_out[1]  ; add_b:u2|buffer[0][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; add_b:u2|buffer[0][1] ; add_b:u2|buffer[1][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; polar:u3|polar_out.10 ; change:u4|data_out[0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.395      ;
; 0.244 ; m_sequence:m|temp[1]  ; m_sequence:m|temp[2]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.396      ;
; 0.245 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[3]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245 ; m_sequence:m|temp[3]  ; m_sequence:m|temp[4]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.245 ; add_v:u1|counter[0]   ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.397      ;
; 0.248 ; m_sequence:m|temp[2]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.296 ; m_sequence:m|temp[6]  ; m_sequence:m|temp[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.448      ;
; 0.302 ; m_sequence:m|data_out ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.454      ;
; 0.305 ; m_sequence:m|data_out ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.457      ;
; 0.316 ; add_b:u2|buffer[1][1] ; add_b:u2|buffer[2][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.001      ; 0.469      ;
; 0.321 ; m_sequence:m|temp[6]  ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.473      ;
; 0.327 ; add_b:u2|buffer[0][0] ; add_b:u2|buffer[1][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.479      ;
; 0.331 ; add_b:u2|buffer[2][0] ; add_b:u2|buffer[3][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.483      ;
; 0.336 ; add_v:u1|data_out[0]  ; add_b:u2|buffer[0][0] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.001      ; 0.489      ;
; 0.341 ; add_v:u1|data_out[1]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.001      ; 0.494      ;
; 0.341 ; add_v:u1|data_out[1]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.001      ; 0.494      ;
; 0.359 ; m_sequence:m|load     ; m_sequence:m|data_out ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.511      ;
; 0.369 ; add_b:u2|counterv     ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.521      ;
; 0.371 ; polar:u3|even         ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.523      ;
; 0.374 ; add_v:u1|counter[0]   ; add_v:u1|data_out[0]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.526      ;
; 0.375 ; polar:u3|even         ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.527      ;
; 0.382 ; add_v:u1|counter[0]   ; add_v:u1|data_out[1]  ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.534      ;
; 0.386 ; m_sequence:m|data_out ; add_v:u1|counter[0]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.538      ;
; 0.386 ; m_sequence:m|data_out ; add_v:u1|counter[1]   ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.538      ;
; 0.387 ; add_b:u2|buffer[3][0] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.539      ;
; 0.387 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.539      ;
; 0.387 ; add_b:u2|buffer[3][0] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.539      ;
; 0.396 ; add_b:u2|buffer[2][1] ; add_b:u2|buffer[3][1] ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.548      ;
; 0.425 ; add_b:u2|counterv     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.577      ;
; 0.425 ; add_b:u2|counterv     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.577      ;
; 0.425 ; add_b:u2|counterv     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.577      ;
; 0.438 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.590      ;
; 0.442 ; add_b:u2|buffer[3][1] ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.594      ;
; 0.464 ; add_v:u1|data_out[0]  ; add_b:u2|counter1     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.001      ; 0.617      ;
; 0.472 ; add_v:u1|data_out[0]  ; add_b:u2|counterv     ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.001      ; 0.625      ;
; 0.511 ; add_b:u2|buffer[3][1] ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.663      ;
; 0.552 ; add_b:u2|counter1     ; polar:u3|even         ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.704      ;
; 0.552 ; add_b:u2|counter1     ; polar:u3|polar_out.01 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.704      ;
; 0.552 ; add_b:u2|counter1     ; polar:u3|polar_out.10 ; even16_div:div16|clk_out ; even16_div:div16|clk_out ; 0.000        ; 0.000      ; 0.704      ;
+-------+-----------------------+-----------------------+--------------------------+--------------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'recover:u8|clk_out'                                                                                                   ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; Slack ; From Node              ; To Node             ; Launch Clock       ; Latch Clock        ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+
; 0.215 ; findv:u6|flag1[0]      ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; findv:u6|flag1[1]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; findv:u6|flag2[0]      ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; findv:u6|flag2[1]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; findv:u6|outdata[0]    ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; delvb:u7|bufferdata    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; delvb:u7|counterv      ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.367      ;
; 0.240 ; delvb:u7|bufferdata    ; delvb:u7|buffer[0]  ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.392      ;
; 0.242 ; findv:u6|flag2[0]      ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.394      ;
; 0.248 ; findv:u6|flag1[0]      ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.400      ;
; 0.254 ; findv:u6|outdata[1]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.406      ;
; 0.255 ; findv:u6|outdata[1]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.407      ;
; 0.324 ; delvb:u7|buffer[0]     ; delvb:u7|buffer[1]  ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.476      ;
; 0.330 ; trans8to1:u5|outdata_P ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.482      ;
; 0.335 ; trans8to1:u5|outdata_P ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.487      ;
; 0.336 ; trans8to1:u5|outdata_P ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.488      ;
; 0.337 ; delvb:u7|buffer[1]     ; delvb:u7|buffer[2]  ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.489      ;
; 0.370 ; findv:u6|outdata[0]    ; delvb:u7|bufferdata ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.522      ;
; 0.370 ; findv:u6|outdata[0]    ; delvb:u7|counterv   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.522      ;
; 0.460 ; trans8to1:u5|outdata_N ; findv:u6|outdata[0] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.612      ;
; 0.461 ; trans8to1:u5|outdata_N ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.613      ;
; 0.468 ; trans8to1:u5|outdata_N ; findv:u6|flag1[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.620      ;
; 0.474 ; trans8to1:u5|outdata_N ; findv:u6|flag2[0]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.626      ;
; 0.482 ; findv:u6|flag1[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.634      ;
; 0.531 ; findv:u6|flag1[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.683      ;
; 0.539 ; findv:u6|flag2[1]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.691      ;
; 0.547 ; trans8to1:u5|outdata_N ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.699      ;
; 0.547 ; trans8to1:u5|outdata_N ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.699      ;
; 0.553 ; trans8to1:u5|outdata_P ; findv:u6|flag1[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.705      ;
; 0.553 ; trans8to1:u5|outdata_P ; findv:u6|flag2[1]   ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.705      ;
; 0.553 ; trans8to1:u5|outdata_P ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.705      ;
; 0.583 ; findv:u6|flag2[0]      ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.735      ;
; 0.597 ; findv:u6|outdata[1]    ; findv:u6|outdata[1] ; recover:u8|clk_out ; recover:u8|clk_out ; 0.000        ; 0.000      ; 0.749      ;
+-------+------------------------+---------------------+--------------------+--------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                        ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|clk_out  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|clk_out  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[5] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[5] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[6] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[6] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; even256_div:div256|count[7] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; even256_div:div256|count[7] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|clk_out|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|clk_out|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; div256|count[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; div256|count[7]|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'even16_div:div16|clk_out'                                                                         ;
+--------+--------------+----------------+------------------+--------------------------+------------+--------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                    ; Clock Edge ; Target                         ;
+--------+--------------+----------------+------------------+--------------------------+------------+--------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[0][1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[1][1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[2][1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|buffer[3][1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counter1              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counter1              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counterv              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_b:u2|counterv              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|counter[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; add_v:u1|data_out[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[7]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; change:u4|data_out[7]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|data_out          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|data_out          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|load              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|load              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[3]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[3]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[4]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[4]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[5]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[5]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[6]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m_sequence:m|temp[6]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; polar:u3|even                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; polar:u3|even                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.01          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.01          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.10          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; polar:u3|polar_out.10          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; div16|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; div16|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; div16|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|data_out|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|data_out|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|load|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|load|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[0]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[1]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[2]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[3]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[4]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[4]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[5]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[5]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; m|temp[6]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; m|temp[6]|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|counter[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|counter[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|counter[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|counter[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|data_out[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|data_out[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u1|data_out[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u1|data_out[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[0][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[1][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even16_div:div16|clk_out ; Rise       ; u2|buffer[2][1]|clk            ;
+--------+--------------+----------------+------------------+--------------------------+------------+--------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'even256_div:div256|clk_out'                                                                          ;
+--------+--------------+----------------+------------------+----------------------------+------------+---------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                      ; Clock Edge ; Target                          ;
+--------+--------------+----------------+------------------+----------------------------+------------+---------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|clk_out        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|clk_out        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; even16_div:div16|count[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[3]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[3]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[4]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[4]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[5]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[5]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[6]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[6]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[7]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|buffer[7]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|clk_out              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|clk_out              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[2]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[2]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[3]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|counter[3]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; recover:u8|flag                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; recover:u8|flag                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|clk_out|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|clk_out|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|count[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|count[0]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|count[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|count[1]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div16|count[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div16|count[2]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div256|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div256|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; div256|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[3]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[3]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[4]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[4]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[5]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[5]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[6]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[6]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|buffer[7]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|buffer[7]|clk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|clk_out|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|clk_out|clk                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|counter[3]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|counter[3]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; even256_div:div256|clk_out ; Rise       ; u8|flag|clk                     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; even256_div:div256|clk_out ; Rise       ; u8|flag|clk                     ;
+--------+--------------+----------------+------------------+----------------------------+------------+---------------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'recover:u8|clk_out'                                                                      ;
+--------+--------------+----------------+------------------+--------------------+------------+-----------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock              ; Clock Edge ; Target                      ;
+--------+--------------+----------------+------------------+--------------------+------------+-----------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[0]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[0]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[1]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[1]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[2]          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|buffer[2]          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|bufferdata         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|bufferdata         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; delvb:u7|counterv           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; delvb:u7|counterv           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag1[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[0]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[0]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[1]           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|flag2[1]           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[0]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[0]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[1]         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; findv:u6|outdata[1]         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_N      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_N      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_P      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; trans8to1:u5|outdata_P      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u5|outdata_N|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u5|outdata_N|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u5|outdata_P|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u5|outdata_P|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag1[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag1[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag1[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag1[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag2[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag2[0]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|flag2[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|flag2[1]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|outdata[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|outdata[0]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u6|outdata[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u6|outdata[1]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|buffer[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|buffer[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|buffer[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|buffer[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|buffer[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|buffer[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|bufferdata|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|bufferdata|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u7|counterv|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u7|counterv|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u8|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u8|clk_out|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; recover:u8|clk_out ; Rise       ; u8|clk_out~clkctrl|outclk   ;
+--------+--------------+----------------+------------------+--------------------+------------+-----------------------------+


+--------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                            ;
+-----------------+----------------------------+-------+-------+------------+----------------------------+
; Data Port       ; Clock Port                 ; Rise  ; Fall  ; Clock Edge ; Clock Reference            ;
+-----------------+----------------------------+-------+-------+------------+----------------------------+
; ena             ; even16_div:div16|clk_out   ; 2.530 ; 2.530 ; Rise       ; even16_div:div16|clk_out   ;
; rst             ; even16_div:div16|clk_out   ; 2.470 ; 2.470 ; Rise       ; even16_div:div16|clk_out   ;
; data_out_ad[*]  ; even256_div:div256|clk_out ; 3.006 ; 3.006 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[3] ; even256_div:div256|clk_out ; 2.849 ; 2.849 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[4] ; even256_div:div256|clk_out ; 2.733 ; 2.733 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[5] ; even256_div:div256|clk_out ; 2.865 ; 2.865 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[6] ; even256_div:div256|clk_out ; 3.003 ; 3.003 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[7] ; even256_div:div256|clk_out ; 3.006 ; 3.006 ; Rise       ; even256_div:div256|clk_out ;
; data_out_ad[*]  ; recover:u8|clk_out         ; 4.111 ; 4.111 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[3] ; recover:u8|clk_out         ; 3.874 ; 3.874 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[4] ; recover:u8|clk_out         ; 3.853 ; 3.853 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[5] ; recover:u8|clk_out         ; 4.111 ; 4.111 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[6] ; recover:u8|clk_out         ; 3.636 ; 3.636 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[7] ; recover:u8|clk_out         ; 3.552 ; 3.552 ; Rise       ; recover:u8|clk_out         ;
; rst             ; recover:u8|clk_out         ; 3.013 ; 3.013 ; Rise       ; recover:u8|clk_out         ;
+-----------------+----------------------------+-------+-------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                               ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port       ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; ena             ; even16_div:div16|clk_out   ; -2.154 ; -2.154 ; Rise       ; even16_div:div16|clk_out   ;
; rst             ; even16_div:div16|clk_out   ; -2.157 ; -2.157 ; Rise       ; even16_div:div16|clk_out   ;
; data_out_ad[*]  ; even256_div:div256|clk_out ; -2.022 ; -2.022 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[3] ; even256_div:div256|clk_out ; -2.022 ; -2.022 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[4] ; even256_div:div256|clk_out ; -2.034 ; -2.034 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[5] ; even256_div:div256|clk_out ; -2.328 ; -2.328 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[6] ; even256_div:div256|clk_out ; -2.235 ; -2.235 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[7] ; even256_div:div256|clk_out ; -2.220 ; -2.220 ; Rise       ; even256_div:div256|clk_out ;
; data_out_ad[*]  ; recover:u8|clk_out         ; -3.020 ; -3.020 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[3] ; recover:u8|clk_out         ; -3.159 ; -3.159 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[4] ; recover:u8|clk_out         ; -3.084 ; -3.084 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[5] ; recover:u8|clk_out         ; -3.231 ; -3.231 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[6] ; recover:u8|clk_out         ; -3.020 ; -3.020 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[7] ; recover:u8|clk_out         ; -3.023 ; -3.023 ; Rise       ; recover:u8|clk_out         ;
; rst             ; recover:u8|clk_out         ; -2.893 ; -2.893 ; Rise       ; recover:u8|clk_out         ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                ;
+---------------+----------------------------+-------+-------+------------+----------------------------+
; Data Port     ; Clock Port                 ; Rise  ; Fall  ; Clock Edge ; Clock Reference            ;
+---------------+----------------------------+-------+-------+------------+----------------------------+
; clk_16        ; even16_div:div16|clk_out   ; 2.678 ;       ; Rise       ; even16_div:div16|clk_out   ;
; data_out[*]   ; even16_div:div16|clk_out   ; 3.732 ; 3.732 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[0]  ; even16_div:div16|clk_out   ; 3.327 ; 3.327 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[1]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[2]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[3]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[4]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[5]  ; even16_div:div16|clk_out   ; 3.468 ; 3.468 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[6]  ; even16_div:div16|clk_out   ; 3.467 ; 3.467 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[7]  ; even16_div:div16|clk_out   ; 3.732 ; 3.732 ; Rise       ; even16_div:div16|clk_out   ;
; outN          ; even16_div:div16|clk_out   ; 3.206 ; 3.206 ; Rise       ; even16_div:div16|clk_out   ;
; outP          ; even16_div:div16|clk_out   ; 3.483 ; 3.483 ; Rise       ; even16_div:div16|clk_out   ;
; outb[*]       ; even16_div:div16|clk_out   ; 3.626 ; 3.626 ; Rise       ; even16_div:div16|clk_out   ;
;  outb[0]      ; even16_div:div16|clk_out   ; 3.449 ; 3.449 ; Rise       ; even16_div:div16|clk_out   ;
;  outb[1]      ; even16_div:div16|clk_out   ; 3.626 ; 3.626 ; Rise       ; even16_div:div16|clk_out   ;
; outm          ; even16_div:div16|clk_out   ; 3.707 ; 3.707 ; Rise       ; even16_div:div16|clk_out   ;
; outv[*]       ; even16_div:div16|clk_out   ; 3.213 ; 3.213 ; Rise       ; even16_div:div16|clk_out   ;
;  outv[0]      ; even16_div:div16|clk_out   ; 3.213 ; 3.213 ; Rise       ; even16_div:div16|clk_out   ;
;  outv[1]      ; even16_div:div16|clk_out   ; 3.210 ; 3.210 ; Rise       ; even16_div:div16|clk_out   ;
; clk_16        ; even16_div:div16|clk_out   ;       ; 2.678 ; Fall       ; even16_div:div16|clk_out   ;
; clk_256       ; even256_div:div256|clk_out ; 2.940 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ; 2.346 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ; 2.640 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256       ; even256_div:div256|clk_out ;       ; 2.940 ; Fall       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ;       ; 2.346 ; Fall       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ;       ; 2.640 ; Fall       ; even256_div:div256|clk_out ;
; clk_recover   ; recover:u8|clk_out         ; 3.017 ;       ; Rise       ; recover:u8|clk_out         ;
; finallyout    ; recover:u8|clk_out         ; 4.416 ; 4.416 ; Rise       ; recover:u8|clk_out         ;
; outdata_N     ; recover:u8|clk_out         ; 3.255 ; 3.255 ; Rise       ; recover:u8|clk_out         ;
; outdata_P     ; recover:u8|clk_out         ; 3.249 ; 3.249 ; Rise       ; recover:u8|clk_out         ;
; outdata_v[*]  ; recover:u8|clk_out         ; 3.241 ; 3.241 ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[0] ; recover:u8|clk_out         ; 3.240 ; 3.240 ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[1] ; recover:u8|clk_out         ; 3.241 ; 3.241 ; Rise       ; recover:u8|clk_out         ;
; clk_recover   ; recover:u8|clk_out         ;       ; 3.017 ; Fall       ; recover:u8|clk_out         ;
+---------------+----------------------------+-------+-------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                        ;
+---------------+----------------------------+-------+-------+------------+----------------------------+
; Data Port     ; Clock Port                 ; Rise  ; Fall  ; Clock Edge ; Clock Reference            ;
+---------------+----------------------------+-------+-------+------------+----------------------------+
; clk_16        ; even16_div:div16|clk_out   ; 2.678 ;       ; Rise       ; even16_div:div16|clk_out   ;
; data_out[*]   ; even16_div:div16|clk_out   ; 3.327 ; 3.327 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[0]  ; even16_div:div16|clk_out   ; 3.327 ; 3.327 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[1]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[2]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[3]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[4]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[5]  ; even16_div:div16|clk_out   ; 3.468 ; 3.468 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[6]  ; even16_div:div16|clk_out   ; 3.467 ; 3.467 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[7]  ; even16_div:div16|clk_out   ; 3.732 ; 3.732 ; Rise       ; even16_div:div16|clk_out   ;
; outN          ; even16_div:div16|clk_out   ; 3.206 ; 3.206 ; Rise       ; even16_div:div16|clk_out   ;
; outP          ; even16_div:div16|clk_out   ; 3.483 ; 3.483 ; Rise       ; even16_div:div16|clk_out   ;
; outb[*]       ; even16_div:div16|clk_out   ; 3.284 ; 3.284 ; Rise       ; even16_div:div16|clk_out   ;
;  outb[0]      ; even16_div:div16|clk_out   ; 3.284 ; 3.284 ; Rise       ; even16_div:div16|clk_out   ;
;  outb[1]      ; even16_div:div16|clk_out   ; 3.469 ; 3.469 ; Rise       ; even16_div:div16|clk_out   ;
; outm          ; even16_div:div16|clk_out   ; 3.707 ; 3.707 ; Rise       ; even16_div:div16|clk_out   ;
; outv[*]       ; even16_div:div16|clk_out   ; 3.210 ; 3.210 ; Rise       ; even16_div:div16|clk_out   ;
;  outv[0]      ; even16_div:div16|clk_out   ; 3.213 ; 3.213 ; Rise       ; even16_div:div16|clk_out   ;
;  outv[1]      ; even16_div:div16|clk_out   ; 3.210 ; 3.210 ; Rise       ; even16_div:div16|clk_out   ;
; clk_16        ; even16_div:div16|clk_out   ;       ; 2.678 ; Fall       ; even16_div:div16|clk_out   ;
; clk_256       ; even256_div:div256|clk_out ; 2.940 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ; 2.346 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ; 2.640 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256       ; even256_div:div256|clk_out ;       ; 2.940 ; Fall       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ;       ; 2.346 ; Fall       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ;       ; 2.640 ; Fall       ; even256_div:div256|clk_out ;
; clk_recover   ; recover:u8|clk_out         ; 3.017 ;       ; Rise       ; recover:u8|clk_out         ;
; finallyout    ; recover:u8|clk_out         ; 4.381 ; 4.381 ; Rise       ; recover:u8|clk_out         ;
; outdata_N     ; recover:u8|clk_out         ; 3.255 ; 3.255 ; Rise       ; recover:u8|clk_out         ;
; outdata_P     ; recover:u8|clk_out         ; 3.249 ; 3.249 ; Rise       ; recover:u8|clk_out         ;
; outdata_v[*]  ; recover:u8|clk_out         ; 3.240 ; 3.240 ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[0] ; recover:u8|clk_out         ; 3.240 ; 3.240 ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[1] ; recover:u8|clk_out         ; 3.241 ; 3.241 ; Rise       ; recover:u8|clk_out         ;
; clk_recover   ; recover:u8|clk_out         ;       ; 3.017 ; Fall       ; recover:u8|clk_out         ;
+---------------+----------------------------+-------+-------+------------+----------------------------+


+--------------------------------------------------------------+
; Propagation Delay                                            ;
+----------------+-------------------+-------+----+----+-------+
; Input Port     ; Output Port       ; RR    ; RF ; FR ; FF    ;
+----------------+-------------------+-------+----+----+-------+
; data_out_ad[0] ; data_out_check[0] ; 5.242 ;    ;    ; 5.242 ;
; data_out_ad[1] ; data_out_check[1] ; 5.270 ;    ;    ; 5.270 ;
; data_out_ad[2] ; data_out_check[2] ; 5.192 ;    ;    ; 5.192 ;
; data_out_ad[3] ; data_out_check[3] ; 5.376 ;    ;    ; 5.376 ;
; data_out_ad[4] ; data_out_check[4] ; 5.344 ;    ;    ; 5.344 ;
; data_out_ad[5] ; data_out_check[5] ; 5.384 ;    ;    ; 5.384 ;
; data_out_ad[6] ; data_out_check[6] ; 5.369 ;    ;    ; 5.369 ;
; data_out_ad[7] ; data_out_check[7] ; 5.248 ;    ;    ; 5.248 ;
; rst            ; outN              ; 5.124 ;    ;    ; 5.124 ;
; rst            ; outP              ; 5.397 ;    ;    ; 5.397 ;
+----------------+-------------------+-------+----+----+-------+


+--------------------------------------------------------------+
; Minimum Propagation Delay                                    ;
+----------------+-------------------+-------+----+----+-------+
; Input Port     ; Output Port       ; RR    ; RF ; FR ; FF    ;
+----------------+-------------------+-------+----+----+-------+
; data_out_ad[0] ; data_out_check[0] ; 5.242 ;    ;    ; 5.242 ;
; data_out_ad[1] ; data_out_check[1] ; 5.270 ;    ;    ; 5.270 ;
; data_out_ad[2] ; data_out_check[2] ; 5.192 ;    ;    ; 5.192 ;
; data_out_ad[3] ; data_out_check[3] ; 5.376 ;    ;    ; 5.376 ;
; data_out_ad[4] ; data_out_check[4] ; 5.344 ;    ;    ; 5.344 ;
; data_out_ad[5] ; data_out_check[5] ; 5.384 ;    ;    ; 5.384 ;
; data_out_ad[6] ; data_out_check[6] ; 5.369 ;    ;    ; 5.369 ;
; data_out_ad[7] ; data_out_check[7] ; 5.248 ;    ;    ; 5.248 ;
; rst            ; outN              ; 5.124 ;    ;    ; 5.124 ;
; rst            ; outP              ; 5.397 ;    ;    ; 5.397 ;
+----------------+-------------------+-------+----+----+-------+


+-------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                       ;
+-----------------------------+---------+--------+----------+---------+---------------------+
; Clock                       ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+-----------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack            ; -2.148  ; -2.972 ; N/A      ; N/A     ; -1.941              ;
;  clk                        ; -2.148  ; -2.617 ; N/A      ; N/A     ; -1.941              ;
;  even16_div:div16|clk_out   ; -1.509  ; 0.215  ; N/A      ; N/A     ; -0.742              ;
;  even256_div:div256|clk_out ; -1.642  ; -2.972 ; N/A      ; N/A     ; -0.742              ;
;  recover:u8|clk_out         ; -1.588  ; 0.215  ; N/A      ; N/A     ; -0.742              ;
; Design-wide TNS             ; -44.768 ; -8.561 ; 0.0      ; 0.0     ; -98.401             ;
;  clk                        ; -19.036 ; -2.617 ; N/A      ; N/A     ; -15.297             ;
;  even16_div:div16|clk_out   ; -9.497  ; 0.000  ; N/A      ; N/A     ; -41.552             ;
;  even256_div:div256|clk_out ; -6.565  ; -5.944 ; N/A      ; N/A     ; -22.260             ;
;  recover:u8|clk_out         ; -9.670  ; 0.000  ; N/A      ; N/A     ; -19.292             ;
+-----------------------------+---------+--------+----------+---------+---------------------+


+----------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                              ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port       ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; ena             ; even16_div:div16|clk_out   ; 5.309  ; 5.309  ; Rise       ; even16_div:div16|clk_out   ;
; rst             ; even16_div:div16|clk_out   ; 5.087  ; 5.087  ; Rise       ; even16_div:div16|clk_out   ;
; data_out_ad[*]  ; even256_div:div256|clk_out ; 7.049  ; 7.049  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[3] ; even256_div:div256|clk_out ; 6.829  ; 6.829  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[4] ; even256_div:div256|clk_out ; 6.388  ; 6.388  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[5] ; even256_div:div256|clk_out ; 6.547  ; 6.547  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[6] ; even256_div:div256|clk_out ; 7.010  ; 7.010  ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[7] ; even256_div:div256|clk_out ; 7.049  ; 7.049  ; Rise       ; even256_div:div256|clk_out ;
; data_out_ad[*]  ; recover:u8|clk_out         ; 10.317 ; 10.317 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[3] ; recover:u8|clk_out         ; 9.849  ; 9.849  ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[4] ; recover:u8|clk_out         ; 9.775  ; 9.775  ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[5] ; recover:u8|clk_out         ; 10.317 ; 10.317 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[6] ; recover:u8|clk_out         ; 8.538  ; 8.538  ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[7] ; recover:u8|clk_out         ; 8.351  ; 8.351  ; Rise       ; recover:u8|clk_out         ;
; rst             ; recover:u8|clk_out         ; 6.981  ; 6.981  ; Rise       ; recover:u8|clk_out         ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                               ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port       ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+
; ena             ; even16_div:div16|clk_out   ; -2.154 ; -2.154 ; Rise       ; even16_div:div16|clk_out   ;
; rst             ; even16_div:div16|clk_out   ; -2.157 ; -2.157 ; Rise       ; even16_div:div16|clk_out   ;
; data_out_ad[*]  ; even256_div:div256|clk_out ; -2.022 ; -2.022 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[3] ; even256_div:div256|clk_out ; -2.022 ; -2.022 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[4] ; even256_div:div256|clk_out ; -2.034 ; -2.034 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[5] ; even256_div:div256|clk_out ; -2.328 ; -2.328 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[6] ; even256_div:div256|clk_out ; -2.235 ; -2.235 ; Rise       ; even256_div:div256|clk_out ;
;  data_out_ad[7] ; even256_div:div256|clk_out ; -2.220 ; -2.220 ; Rise       ; even256_div:div256|clk_out ;
; data_out_ad[*]  ; recover:u8|clk_out         ; -3.020 ; -3.020 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[3] ; recover:u8|clk_out         ; -3.159 ; -3.159 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[4] ; recover:u8|clk_out         ; -3.084 ; -3.084 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[5] ; recover:u8|clk_out         ; -3.231 ; -3.231 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[6] ; recover:u8|clk_out         ; -3.020 ; -3.020 ; Rise       ; recover:u8|clk_out         ;
;  data_out_ad[7] ; recover:u8|clk_out         ; -3.023 ; -3.023 ; Rise       ; recover:u8|clk_out         ;
; rst             ; recover:u8|clk_out         ; -2.893 ; -2.893 ; Rise       ; recover:u8|clk_out         ;
+-----------------+----------------------------+--------+--------+------------+----------------------------+


+--------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                  ;
+---------------+----------------------------+--------+--------+------------+----------------------------+
; Data Port     ; Clock Port                 ; Rise   ; Fall   ; Clock Edge ; Clock Reference            ;
+---------------+----------------------------+--------+--------+------------+----------------------------+
; clk_16        ; even16_div:div16|clk_out   ; 6.525  ;        ; Rise       ; even16_div:div16|clk_out   ;
; data_out[*]   ; even16_div:div16|clk_out   ; 8.544  ; 8.544  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[0]  ; even16_div:div16|clk_out   ; 7.340  ; 7.340  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[1]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[2]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[3]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[4]  ; even16_div:div16|clk_out   ; 7.713  ; 7.713  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[5]  ; even16_div:div16|clk_out   ; 7.766  ; 7.766  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[6]  ; even16_div:div16|clk_out   ; 7.742  ; 7.742  ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[7]  ; even16_div:div16|clk_out   ; 8.544  ; 8.544  ; Rise       ; even16_div:div16|clk_out   ;
; outN          ; even16_div:div16|clk_out   ; 7.057  ; 7.057  ; Rise       ; even16_div:div16|clk_out   ;
; outP          ; even16_div:div16|clk_out   ; 7.813  ; 7.813  ; Rise       ; even16_div:div16|clk_out   ;
; outb[*]       ; even16_div:div16|clk_out   ; 8.322  ; 8.322  ; Rise       ; even16_div:div16|clk_out   ;
;  outb[0]      ; even16_div:div16|clk_out   ; 7.908  ; 7.908  ; Rise       ; even16_div:div16|clk_out   ;
;  outb[1]      ; even16_div:div16|clk_out   ; 8.322  ; 8.322  ; Rise       ; even16_div:div16|clk_out   ;
; outm          ; even16_div:div16|clk_out   ; 8.502  ; 8.502  ; Rise       ; even16_div:div16|clk_out   ;
; outv[*]       ; even16_div:div16|clk_out   ; 6.903  ; 6.903  ; Rise       ; even16_div:div16|clk_out   ;
;  outv[0]      ; even16_div:div16|clk_out   ; 6.903  ; 6.903  ; Rise       ; even16_div:div16|clk_out   ;
;  outv[1]      ; even16_div:div16|clk_out   ; 6.898  ; 6.898  ; Rise       ; even16_div:div16|clk_out   ;
; clk_16        ; even16_div:div16|clk_out   ;        ; 6.525  ; Fall       ; even16_div:div16|clk_out   ;
; clk_256       ; even256_div:div256|clk_out ; 7.526  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ; 5.375  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ; 6.675  ;        ; Rise       ; even256_div:div256|clk_out ;
; clk_256       ; even256_div:div256|clk_out ;        ; 7.526  ; Fall       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ;        ; 5.375  ; Fall       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ;        ; 6.675  ; Fall       ; even256_div:div256|clk_out ;
; clk_recover   ; recover:u8|clk_out         ; 7.903  ;        ; Rise       ; recover:u8|clk_out         ;
; finallyout    ; recover:u8|clk_out         ; 10.550 ; 10.550 ; Rise       ; recover:u8|clk_out         ;
; outdata_N     ; recover:u8|clk_out         ; 6.982  ; 6.982  ; Rise       ; recover:u8|clk_out         ;
; outdata_P     ; recover:u8|clk_out         ; 6.968  ; 6.968  ; Rise       ; recover:u8|clk_out         ;
; outdata_v[*]  ; recover:u8|clk_out         ; 6.949  ; 6.949  ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[0] ; recover:u8|clk_out         ; 6.948  ; 6.948  ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[1] ; recover:u8|clk_out         ; 6.949  ; 6.949  ; Rise       ; recover:u8|clk_out         ;
; clk_recover   ; recover:u8|clk_out         ;        ; 7.903  ; Fall       ; recover:u8|clk_out         ;
+---------------+----------------------------+--------+--------+------------+----------------------------+


+------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                        ;
+---------------+----------------------------+-------+-------+------------+----------------------------+
; Data Port     ; Clock Port                 ; Rise  ; Fall  ; Clock Edge ; Clock Reference            ;
+---------------+----------------------------+-------+-------+------------+----------------------------+
; clk_16        ; even16_div:div16|clk_out   ; 2.678 ;       ; Rise       ; even16_div:div16|clk_out   ;
; data_out[*]   ; even16_div:div16|clk_out   ; 3.327 ; 3.327 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[0]  ; even16_div:div16|clk_out   ; 3.327 ; 3.327 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[1]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[2]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[3]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[4]  ; even16_div:div16|clk_out   ; 3.439 ; 3.439 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[5]  ; even16_div:div16|clk_out   ; 3.468 ; 3.468 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[6]  ; even16_div:div16|clk_out   ; 3.467 ; 3.467 ; Rise       ; even16_div:div16|clk_out   ;
;  data_out[7]  ; even16_div:div16|clk_out   ; 3.732 ; 3.732 ; Rise       ; even16_div:div16|clk_out   ;
; outN          ; even16_div:div16|clk_out   ; 3.206 ; 3.206 ; Rise       ; even16_div:div16|clk_out   ;
; outP          ; even16_div:div16|clk_out   ; 3.483 ; 3.483 ; Rise       ; even16_div:div16|clk_out   ;
; outb[*]       ; even16_div:div16|clk_out   ; 3.284 ; 3.284 ; Rise       ; even16_div:div16|clk_out   ;
;  outb[0]      ; even16_div:div16|clk_out   ; 3.284 ; 3.284 ; Rise       ; even16_div:div16|clk_out   ;
;  outb[1]      ; even16_div:div16|clk_out   ; 3.469 ; 3.469 ; Rise       ; even16_div:div16|clk_out   ;
; outm          ; even16_div:div16|clk_out   ; 3.707 ; 3.707 ; Rise       ; even16_div:div16|clk_out   ;
; outv[*]       ; even16_div:div16|clk_out   ; 3.210 ; 3.210 ; Rise       ; even16_div:div16|clk_out   ;
;  outv[0]      ; even16_div:div16|clk_out   ; 3.213 ; 3.213 ; Rise       ; even16_div:div16|clk_out   ;
;  outv[1]      ; even16_div:div16|clk_out   ; 3.210 ; 3.210 ; Rise       ; even16_div:div16|clk_out   ;
; clk_16        ; even16_div:div16|clk_out   ;       ; 2.678 ; Fall       ; even16_div:div16|clk_out   ;
; clk_256       ; even256_div:div256|clk_out ; 2.940 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ; 2.346 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ; 2.640 ;       ; Rise       ; even256_div:div256|clk_out ;
; clk_256       ; even256_div:div256|clk_out ;       ; 2.940 ; Fall       ; even256_div:div256|clk_out ;
; clk_256_ad    ; even256_div:div256|clk_out ;       ; 2.346 ; Fall       ; even256_div:div256|clk_out ;
; clk_256_da    ; even256_div:div256|clk_out ;       ; 2.640 ; Fall       ; even256_div:div256|clk_out ;
; clk_recover   ; recover:u8|clk_out         ; 3.017 ;       ; Rise       ; recover:u8|clk_out         ;
; finallyout    ; recover:u8|clk_out         ; 4.381 ; 4.381 ; Rise       ; recover:u8|clk_out         ;
; outdata_N     ; recover:u8|clk_out         ; 3.255 ; 3.255 ; Rise       ; recover:u8|clk_out         ;
; outdata_P     ; recover:u8|clk_out         ; 3.249 ; 3.249 ; Rise       ; recover:u8|clk_out         ;
; outdata_v[*]  ; recover:u8|clk_out         ; 3.240 ; 3.240 ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[0] ; recover:u8|clk_out         ; 3.240 ; 3.240 ; Rise       ; recover:u8|clk_out         ;
;  outdata_v[1] ; recover:u8|clk_out         ; 3.241 ; 3.241 ; Rise       ; recover:u8|clk_out         ;
; clk_recover   ; recover:u8|clk_out         ;       ; 3.017 ; Fall       ; recover:u8|clk_out         ;
+---------------+----------------------------+-------+-------+------------+----------------------------+


+----------------------------------------------------------------+
; Progagation Delay                                              ;
+----------------+-------------------+--------+----+----+--------+
; Input Port     ; Output Port       ; RR     ; RF ; FR ; FF     ;
+----------------+-------------------+--------+----+----+--------+
; data_out_ad[0] ; data_out_check[0] ; 10.797 ;    ;    ; 10.797 ;
; data_out_ad[1] ; data_out_check[1] ; 10.851 ;    ;    ; 10.851 ;
; data_out_ad[2] ; data_out_check[2] ; 10.542 ;    ;    ; 10.542 ;
; data_out_ad[3] ; data_out_check[3] ; 11.165 ;    ;    ; 11.165 ;
; data_out_ad[4] ; data_out_check[4] ; 11.027 ;    ;    ; 11.027 ;
; data_out_ad[5] ; data_out_check[5] ; 11.222 ;    ;    ; 11.222 ;
; data_out_ad[6] ; data_out_check[6] ; 11.183 ;    ;    ; 11.183 ;
; data_out_ad[7] ; data_out_check[7] ; 10.817 ;    ;    ; 10.817 ;
; rst            ; outN              ; 10.807 ;    ;    ; 10.807 ;
; rst            ; outP              ; 11.559 ;    ;    ; 11.559 ;
+----------------+-------------------+--------+----+----+--------+


+--------------------------------------------------------------+
; Minimum Progagation Delay                                    ;
+----------------+-------------------+-------+----+----+-------+
; Input Port     ; Output Port       ; RR    ; RF ; FR ; FF    ;
+----------------+-------------------+-------+----+----+-------+
; data_out_ad[0] ; data_out_check[0] ; 5.242 ;    ;    ; 5.242 ;
; data_out_ad[1] ; data_out_check[1] ; 5.270 ;    ;    ; 5.270 ;
; data_out_ad[2] ; data_out_check[2] ; 5.192 ;    ;    ; 5.192 ;
; data_out_ad[3] ; data_out_check[3] ; 5.376 ;    ;    ; 5.376 ;
; data_out_ad[4] ; data_out_check[4] ; 5.344 ;    ;    ; 5.344 ;
; data_out_ad[5] ; data_out_check[5] ; 5.384 ;    ;    ; 5.384 ;
; data_out_ad[6] ; data_out_check[6] ; 5.369 ;    ;    ; 5.369 ;
; data_out_ad[7] ; data_out_check[7] ; 5.248 ;    ;    ; 5.248 ;
; rst            ; outN              ; 5.124 ;    ;    ; 5.124 ;
; rst            ; outP              ; 5.397 ;    ;    ; 5.397 ;
+----------------+-------------------+-------+----+----+-------+


+-----------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                     ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; From Clock                 ; To Clock                   ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; clk                        ; clk                        ; 108      ; 0        ; 0        ; 0        ;
; even256_div:div256|clk_out ; clk                        ; 1        ; 1        ; 0        ; 0        ;
; even16_div:div16|clk_out   ; even16_div:div16|clk_out   ; 60       ; 0        ; 0        ; 0        ;
; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 1        ; 1        ; 0        ; 0        ;
; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 40       ; 0        ; 0        ; 0        ;
; recover:u8|clk_out         ; even256_div:div256|clk_out ; 1        ; 1        ; 0        ; 0        ;
; recover:u8|clk_out         ; recover:u8|clk_out         ; 43       ; 0        ; 0        ; 0        ;
+----------------------------+----------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                      ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; From Clock                 ; To Clock                   ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+----------------------------+----------------------------+----------+----------+----------+----------+
; clk                        ; clk                        ; 108      ; 0        ; 0        ; 0        ;
; even256_div:div256|clk_out ; clk                        ; 1        ; 1        ; 0        ; 0        ;
; even16_div:div16|clk_out   ; even16_div:div16|clk_out   ; 60       ; 0        ; 0        ; 0        ;
; even16_div:div16|clk_out   ; even256_div:div256|clk_out ; 1        ; 1        ; 0        ; 0        ;
; even256_div:div256|clk_out ; even256_div:div256|clk_out ; 40       ; 0        ; 0        ; 0        ;
; recover:u8|clk_out         ; even256_div:div256|clk_out ; 1        ; 1        ; 0        ; 0        ;
; recover:u8|clk_out         ; recover:u8|clk_out         ; 43       ; 0        ; 0        ; 0        ;
+----------------------------+----------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 10    ; 10   ;
; Unconstrained Input Port Paths  ; 104   ; 104  ;
; Unconstrained Output Ports      ; 33    ; 33   ;
; Unconstrained Output Port Paths ; 40    ; 40   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Full Version
    Info: Processing started: Thu Sep 30 11:45:31 2021
Info: Command: quartus_sta HDB3 -c HDB3
Info: qsta_default_script.tcl version: #1
Info (20030): Parallel compilation is enabled and will use 4 of the 4 processors detected
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'HDB3.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name even256_div:div256|clk_out even256_div:div256|clk_out
    Info (332105): create_clock -period 1.000 -name even16_div:div16|clk_out even16_div:div16|clk_out
    Info (332105): create_clock -period 1.000 -name recover:u8|clk_out recover:u8|clk_out
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.148
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.148       -19.036 clk 
    Info (332119):    -1.642        -6.565 even256_div:div256|clk_out 
    Info (332119):    -1.588        -9.670 recover:u8|clk_out 
    Info (332119):    -1.509        -9.497 even16_div:div16|clk_out 
Info (332146): Worst-case hold slack is -2.972
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.972        -5.944 even256_div:div256|clk_out 
    Info (332119):    -2.617        -2.617 clk 
    Info (332119):     0.499         0.000 even16_div:div16|clk_out 
    Info (332119):     0.499         0.000 recover:u8|clk_out 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.941
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.941       -15.297 clk 
    Info (332119):    -0.742       -41.552 even16_div:div16|clk_out 
    Info (332119):    -0.742       -22.260 even256_div:div256|clk_out 
    Info (332119):    -0.742       -19.292 recover:u8|clk_out 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.075
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.075        -0.600 clk 
    Info (332119):     0.058         0.000 recover:u8|clk_out 
    Info (332119):     0.164         0.000 even256_div:div256|clk_out 
    Info (332119):     0.212         0.000 even16_div:div16|clk_out 
Info (332146): Worst-case hold slack is -1.389
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.389        -1.389 clk 
    Info (332119):    -1.350        -2.700 even256_div:div256|clk_out 
    Info (332119):     0.215         0.000 even16_div:div16|clk_out 
    Info (332119):     0.215         0.000 recover:u8|clk_out 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -10.380 clk 
    Info (332119):    -0.500       -28.000 even16_div:div16|clk_out 
    Info (332119):    -0.500       -15.000 even256_div:div256|clk_out 
    Info (332119):    -0.500       -13.000 recover:u8|clk_out 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 4587 megabytes
    Info: Processing ended: Thu Sep 30 11:45:33 2021
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


